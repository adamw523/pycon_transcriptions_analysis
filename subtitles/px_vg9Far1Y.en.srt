1
00:00:05,330 --> 00:00:07,240
good afternoon everyone welcome back
after lunch

2
00:00:07,240 --> 00:00:10,190
as the first the afternoon sessions
we're gonna be listening to any girl

3
00:00:10,190 --> 00:00:13,150
giving us a talk about doing RESTful web
services with flask

4
00:00:13,150 --> 00:00:17,810
thank you

5
00:00:17,810 --> 00:00:21,029
thank you for coming up

6
00:00:21,029 --> 00:00:24,269
so before I start case you

7
00:00:24,269 --> 00:00:28,510
but no me it's a little bit of
background information myself

8
00:00:28,510 --> 00:00:32,399
but two years ago I E R Rob my blog

9
00:00:32,399 --> 00:00:35,989
engine in flask from scratch and then

10
00:00:35,989 --> 00:00:38,989
up in these two years I

11
00:00:38,989 --> 00:00:42,190
her a few articles on it a flask

12
00:00:42,190 --> 00:00:45,850
you may have heard about dr. make a
tutorial

13
00:00:45,850 --> 00:00:49,370
or maybe did did for so

14
00:00:49,370 --> 00:00:53,260
articles make the ice I wrote up

15
00:00:53,260 --> 00:00:57,079
I have a a bunch of extensions also for
flask

16
00:00:57,079 --> 00:01:00,609
on December 5 that I amount most proud
of

17
00:01:00,609 --> 00:01:04,250
so feel free to check them out and a

18
00:01:04,250 --> 00:01:07,900
last but not least I wrote be alright
people

19
00:01:07,900 --> 00:01:11,600
on flask which up it's going to be in
bookstores

20
00:01:11,600 --> 00:01:15,790
reason so

21
00:01:15,790 --> 00:01:19,340
up another preliminary slide up

22
00:01:19,340 --> 00:01:22,530
all the stuff that i'm gonna show today
exists

23
00:01:22,530 --> 00:01:25,720
in it get her project it'll

24
00:01:25,720 --> 00:01:29,170
working code that runs up bookmark

25
00:01:29,170 --> 00:01:34,070
that address and a after after the talk
if you're interested you

26
00:01:34,070 --> 00:01:37,640
welcome to play with the API domina
percent here

27
00:01:37,640 --> 00:01:42,200
up they are a very detailed instructions
in the relief I'll

28
00:01:42,200 --> 00:01:46,100
so even if you are a beginner you should
be able to run this

29
00:01:46,100 --> 00:01:49,729
now

30
00:01:49,729 --> 00:01:52,759
for week for the those of you that

31
00:01:52,759 --> 00:01:57,290
have no idea what flask s this is the
only begin to slide I have

32
00:01:57,290 --> 00:02:00,770
up this is basically 279

33
00:02:00,770 --> 00:02:04,369
hello world from the flask official
documentation

34
00:02:04,369 --> 00:02:08,580
up the first two lines create an
application

35
00:02:08,580 --> 00:02:12,540
the bottom two lines run it the middle
stuff

36
00:02:12,540 --> 00:02:17,420
it's where important things go on and
its BC theres

37
00:02:17,420 --> 00:02:20,640
pursue decorated function up at the

38
00:02:20,640 --> 00:02:23,760
route tells flask that the French the
follows

39
00:02:23,760 --> 00:02:28,200
is the handler for their root URL that
you can see

40
00:02:28,200 --> 00:02:32,459
progressive slash so

41
00:02:32,459 --> 00:02:35,489
flask knows that when a client requests

42
00:02:35,489 --> 00:02:40,269
the root URL it needs to call this
function and and then a collects

43
00:02:40,269 --> 00:02:44,550
the return value of the function and
sense that to the client if the response

44
00:02:44,550 --> 00:02:49,360
and if you understand this I think you
understand most a foot flask is

45
00:02:49,360 --> 00:02:53,870
because it doesn't have much more than
this okay

46
00:02:53,870 --> 00:02:56,900
if you run this as a script on

47
00:02:56,900 --> 00:03:00,390
are you on your server then you connect

48
00:03:00,390 --> 00:03:04,260
with a web browser and you will see for
the world you're a

49
00:03:04,260 --> 00:03:08,940
your browser window that said so OK

50
00:03:08,940 --> 00:03:11,989
so let's start with the good stuff up

51
00:03:11,989 --> 00:03:15,180
Press late the ice so

52
00:03:15,180 --> 00:03:19,220
I'm gonna show the few basic

53
00:03:19,220 --> 00:03:23,260
up API methods and how I implement them

54
00:03:23,260 --> 00:03:26,480
on not that they say how I

55
00:03:26,480 --> 00:03:31,110
implement them it's not the only way
flask it's all about freedom and choice

56
00:03:31,110 --> 00:03:35,260
so anything you don't like about how I
do things you should improve it

57
00:03:35,260 --> 00:03:38,890
and let me know so I learned to up

58
00:03:38,890 --> 00:03:43,260
so okay for this example

59
00:03:43,260 --> 00:03:48,870
I'm I have a up system that keeps track
of students in classes and students

60
00:03:48,870 --> 00:03:50,180
register two classes

61
00:03:50,180 --> 00:03:54,110
so that that's not something that i'm
gonna up politically know the examples

62
00:03:54,110 --> 00:03:57,299
so I have a

63
00:03:57,299 --> 00:04:01,909
up around that gets the list to students
this is a GET request

64
00:04:01,909 --> 00:04:05,379
might URL slashed you can slash

65
00:04:05,379 --> 00:04:09,000
I want to hear to end in slash this is
optional but I

66
00:04:09,000 --> 00:04:12,360
want to look like a folder because it
returns collection

67
00:04:12,360 --> 00:04:15,430
so

68
00:04:15,430 --> 00:04:18,560
how implement this let let's look at it
the 19

69
00:04:18,560 --> 00:04:22,220
in this function from the right up for
to follow I

70
00:04:22,220 --> 00:04:26,400
topped my database and and for this I'm
using flasks equal alchemy

71
00:04:26,400 --> 00:04:29,880
again that's my preference you can use
whatever you want

72
00:04:29,880 --> 00:04:33,949
but using Flash sequel Oconee I get all
my students

73
00:04:33,949 --> 00:04:37,470
and then hi I for each student

74
00:04:37,470 --> 00:04:43,040
I get I asked the student to give me its
URL

75
00:04:43,040 --> 00:04:47,729
so that I ends up being a list of URL's

76
00:04:47,729 --> 00:04:52,949
I put that in a dictionary with key name
URL's

77
00:04:52,949 --> 00:04:56,440
and then that pictionary gets Jason a
fight this is it

78
00:04:56,440 --> 00:04:59,970
a flask helper function that converts

79
00:04:59,970 --> 00:05:04,100
a dictionary to Jason for my as a string
and then that's a response

80
00:05:04,100 --> 00:05:11,100
that's what the client gets list a few
rounds

81
00:05:11,470 --> 00:05:16,789
so the client knows only a few top-level
URL see knows how to get the list of

82
00:05:16,789 --> 00:05:17,449
students

83
00:05:17,449 --> 00:05:21,270
outlook get the list of our classes and
so on but

84
00:05:21,270 --> 00:05:24,900
it doesn't know much more than that but
now are

85
00:05:24,900 --> 00:05:28,520
the client asked for the list students
and now

86
00:05:28,520 --> 00:05:32,400
it's got few new URL studied in know
about before

87
00:05:32,400 --> 00:05:35,759
so single student can be a pain

88
00:05:35,759 --> 00:05:39,449
with now with this prop

89
00:05:39,449 --> 00:05:43,400
and for this one since I I need to have
a unique URL per student

90
00:05:43,400 --> 00:05:47,000
I have a dynamic component in my

91
00:05:47,000 --> 00:05:50,240
route which you can see with the

92
00:05:50,240 --> 00:05:53,699
angle brackets so I say that my URL for

93
00:05:53,699 --> 00:05:57,150
student is slash students slash and then
the numeric eighty

94
00:05:57,150 --> 00:06:00,970
this is my primary key made a difference
and that that is my choice

95
00:06:00,970 --> 00:06:04,650
I I chose to do it this way

96
00:06:04,650 --> 00:06:07,819
and the I say that this is gonna be

97
00:06:07,819 --> 00:06:11,000
804 get like like the previous one

98
00:06:11,000 --> 00:06:14,780
and implementation is very simple I
stopped my database

99
00:06:14,780 --> 00:06:18,030
to get student from the 80 which of

100
00:06:18,030 --> 00:06:22,150
last night lease end as an argument my
function

101
00:06:22,150 --> 00:06:26,210
and a if the ID turns out to be invalid

102
00:06:26,210 --> 00:06:30,509
flasks equal Oconee will send to 404
back to the client I don't need to worry

103
00:06:30,509 --> 00:06:31,370
about that

104
00:06:31,370 --> 00:06:35,000
and this is it think I'm going every
people are in this session

105
00:06:35,000 --> 00:06:38,030
up my routes are a very clean

106
00:06:38,030 --> 00:06:42,060
I try not to do I'll you don't see any
error checks

107
00:06:42,060 --> 00:06:45,220
that that really make the cold camp

108
00:06:45,220 --> 00:06:49,550
you know dirty so I net lower-level Co
handle my

109
00:06:49,550 --> 00:06:52,610
evers I don't do here so

110
00:06:52,610 --> 00:06:56,780
if s it's a sign that means that the
student exists

111
00:06:56,780 --> 00:07:00,280
and its known and then on the next line

112
00:07:00,280 --> 00:07:04,090
I I killed a student which is you know
one of my database models

113
00:07:04,090 --> 00:07:07,330
to convert self to Jay some and

114
00:07:07,330 --> 00:07:10,720
that returns it by conditioning which
then gets

115
00:07:10,720 --> 00:07:14,050
Jason fight and now decline house

116
00:07:14,050 --> 00:07:19,900
the student

117
00:07:19,900 --> 00:07:23,690
so in some cases

118
00:07:23,690 --> 00:07:27,370
collections are no not global
collections of things

119
00:07:27,370 --> 00:07:31,250
are specific elections that apply to up

120
00:07:31,250 --> 00:07:35,250
single resources an example that will be
the list of classes

121
00:07:35,250 --> 00:07:38,560
student is taking so

122
00:07:38,560 --> 00:07:41,580
for that you build a URL that Hasse the
uniqueness

123
00:07:41,580 --> 00:07:45,430
since I need to include my student ID
but also need to make sure

124
00:07:45,430 --> 00:07:49,240
it looks like a collection because
that's what it's so I

125
00:07:49,240 --> 00:07:52,330
append a final component that

126
00:07:52,330 --> 00:07:58,319
tells me that this is a collection
registrations and i ended with Slash

127
00:07:58,319 --> 00:08:02,139
so up implementation is job also very
simple

128
00:08:02,139 --> 00:08:05,449
pretty similar to the big collection of
students that we did before

129
00:08:05,449 --> 00:08:09,110
I differences that I get my collection
from

130
00:08:09,110 --> 00:08:13,090
every lationship my database so up I
have my student

131
00:08:13,090 --> 00:08:17,919
and then I I say s top registrations and
that that's a wire to be

132
00:08:17,919 --> 00:08:22,729
their relationship my database and then
from that I get the URL's

133
00:08:22,729 --> 00:08:27,000
in 20 list and that list gets into the
dictionary of your else

134
00:08:27,000 --> 00:08:33,349
and that gets church on if i and of it
goes to the client

135
00:08:33,349 --> 00:08:36,529
so this is a POST request are restful
principles

136
00:08:36,529 --> 00:08:40,659
say that when you need to create a
request the client needs to send

137
00:08:40,659 --> 00:08:44,330
the request a supposed to the collection

138
00:08:44,330 --> 00:08:48,060
URL so that goes to students generic

139
00:08:48,060 --> 00:08:53,620
URL and the way to do this is I create
an empty student

140
00:08:53,620 --> 00:08:57,490
and then I call another method to have
been there from Jason

141
00:08:57,490 --> 00:09:00,970
this is the reverse of the to chase and
action before

142
00:09:00,970 --> 00:09:05,130
so this guy takes the Jason from flask
flask its me that

143
00:09:05,130 --> 00:09:08,339
in request Jason

144
00:09:08,339 --> 00:09:11,910
that that comes in the form of a python
dictionary and and then

145
00:09:11,910 --> 00:09:16,640
the student imports itself from that
dictionary

146
00:09:16,640 --> 00:09:20,350
then I ready to the database those are
the two life follow

147
00:09:20,350 --> 00:09:25,260
with session that that's how you write
something with flasks equal Oconee

148
00:09:25,260 --> 00:09:29,080
and then I need to return a response and
the response needs to be

149
00:09:29,080 --> 00:09:33,000
cold 2001 that means that the resource
was created

150
00:09:33,000 --> 00:09:36,800
I'm successful I have anything to hurt
on site

151
00:09:36,800 --> 00:09:39,970
I just Jason if I an empty dictionary

152
00:09:39,970 --> 00:09:43,980
I said this does go to 2001 and then I
get the client

153
00:09:43,980 --> 00:09:49,250
the URL of the resource in a location
pair

154
00:09:49,250 --> 00:09:56,250
and now decline has this new era and it
can work with it

155
00:09:56,670 --> 00:10:00,320
so last two are kind of

156
00:10:00,320 --> 00:10:03,750
every catcher for we've seen so far this
is to update

157
00:10:03,750 --> 00:10:08,470
resource in this case descended our
clients and to put request

158
00:10:08,470 --> 00:10:11,700
and it sends the the fields at the CNN
on

159
00:10:11,700 --> 00:10:16,390
ask a sign in the request and what I do
here is how I love my student

160
00:10:16,390 --> 00:10:19,529
I call from Jason to update

161
00:10:19,529 --> 00:10:22,950
its problems right back to the database
and

162
00:10:22,950 --> 00:10:29,950
I return an anti response because
there's nothing to say it worked

163
00:10:30,190 --> 00:10:33,480
and this is the case which which is even
simpler

164
00:10:33,480 --> 00:10:37,269
I which load my student hiked elf sq

165
00:10:37,269 --> 00:10:43,760
sequel Oconee to delete it and under

166
00:10:43,760 --> 00:10:47,230
so let's look at you know all these
helper methods

167
00:10:47,230 --> 00:10:50,670
that up and using to to make my

168
00:10:50,670 --> 00:10:53,970
routes very beautiful

169
00:10:53,970 --> 00:10:59,760
not so at the top you can see get URL

170
00:10:59,760 --> 00:11:03,540
I'm not her coding might URL's that's
that's bad

171
00:11:03,540 --> 00:11:07,380
flask knows what all the URL see my APR

172
00:11:07,380 --> 00:11:11,190
so I can tell flask to generate the URL
for me

173
00:11:11,190 --> 00:11:15,170
and for that I give it the name of the
function that handles that URL

174
00:11:15,170 --> 00:11:18,740
which is get student and I get any and

175
00:11:18,740 --> 00:11:22,200
arguments that the UN means and I
request that

176
00:11:22,200 --> 00:11:25,519
the URL be external that means that I
want

177
00:11:25,519 --> 00:11:28,709
the the scheme and the hostname all of
that in the URL

178
00:11:28,709 --> 00:11:33,470
it'd you know fully qualified URL

179
00:11:33,470 --> 00:11:36,589
the to Jason is the method that

180
00:11:36,589 --> 00:11:40,839
returns Jason representation for my
student

181
00:11:40,839 --> 00:11:45,180
and for this I just returned a
dictionary and I build it right there

182
00:11:45,180 --> 00:11:49,519
I just up I put the URL unit this is a
reference to itself

183
00:11:49,519 --> 00:11:53,639
so that when the client keeps that purse
or so somewhere

184
00:11:53,639 --> 00:11:57,300
it has a reference to working from I

185
00:11:57,300 --> 00:12:00,560
this is simply the ice I have a name
that's the only thing I have

186
00:12:00,560 --> 00:12:03,680
for student and that's very important

187
00:12:03,680 --> 00:12:07,019
I return he link to how to obtain

188
00:12:07,019 --> 00:12:11,019
registrations for for that student the
client doesn't know this until I tell it

189
00:12:11,019 --> 00:12:14,519
how to do it it's very important that I
don't tell

190
00:12:14,519 --> 00:12:17,519
more than I need to the client because I
one ever serve

191
00:12:17,519 --> 00:12:21,410
my right to change might URL's as much
as possible so

192
00:12:21,410 --> 00:12:27,769
decline needs to know only top-level
URL's document only does

193
00:12:27,769 --> 00:12:34,769
and of course that use URL for tool to
generate my registration 0

194
00:12:36,190 --> 00:12:40,260
said this is the reverse of the to chase
on the from Jason

195
00:12:40,260 --> 00:12:43,470
so I said before that I I don't want to
handle errors

196
00:12:43,470 --> 00:12:46,709
in my top-level high-level cold

197
00:12:46,709 --> 00:12:50,529
and here I need to do it and where do it
is

198
00:12:50,529 --> 00:12:53,550
by throwing exceptions when there's an
error so

199
00:12:53,550 --> 00:12:57,690
I I just put my you know that the cold
copy sold it

200
00:12:57,690 --> 00:13:01,190
properties from the Jason into my model

201
00:13:01,190 --> 00:13:04,240
up inside it triblock and if

202
00:13:04,240 --> 00:13:07,380
there's a key error that means that
declined in central

203
00:13:07,380 --> 00:13:10,779
the information needed to send and in
that case

204
00:13:10,779 --> 00:13:14,730
understood to be an exception I don't
throw the key error exception that

205
00:13:14,730 --> 00:13:20,310
pie from close I which through my own
validation error

206
00:13:20,310 --> 00:13:24,310
and I include a have message with it

207
00:13:24,310 --> 00:13:29,740
so that the client knows happened

208
00:13:29,740 --> 00:13:33,510
which brings a topical for handling so

209
00:13:33,510 --> 00:13:36,740
if I just do what you did in the
previous like then

210
00:13:36,740 --> 00:13:40,170
class will stop it it'll find an
exception he will not know how to handle

211
00:13:40,170 --> 00:13:40,949
its leave

212
00:13:40,949 --> 00:13:45,250
it apart and a $500 ever to the client
but I don't want that

213
00:13:45,250 --> 00:13:50,079
so what I do its II create handlers for
all my arms

214
00:13:50,079 --> 00:13:53,560
you look at the bottom two of those four
functions

215
00:13:53,560 --> 00:13:57,529
those IOU's it a crater from flask call
her handler

216
00:13:57,529 --> 00:14:01,329
on these are two modes in which you can
catch errors

217
00:14:01,329 --> 00:14:05,880
on first to the two takes a custom
exception that that's my

218
00:14:05,880 --> 00:14:09,540
Jason validation error second one takes
an ever

219
00:14:09,540 --> 00:14:13,199
status to them so you can catch errors
both ways

220
00:14:13,199 --> 00:14:16,660
and then you can handle them your own
way and my own way

221
00:14:16,660 --> 00:14:19,680
it's too call wrapper function that
generates

222
00:14:19,680 --> 00:14:23,970
I never response that hath all the
information

223
00:14:23,970 --> 00:14:30,970
including the message that that was
generated when that ever happened

224
00:14:32,060 --> 00:14:36,500
I unit testing missus very important

225
00:14:36,500 --> 00:14:39,730
flask comes with a unit testing client

226
00:14:39,730 --> 00:14:42,760
I its a generic client that it's not
made

227
00:14:42,760 --> 00:14:46,079
specific break the ice so if you use it
asses

228
00:14:46,079 --> 00:14:49,240
there's a little bit of our bling
applicable to you need to do

229
00:14:49,240 --> 00:14:54,449
you need to tell it that you're working
with Jason convert to chase into

230
00:14:54,449 --> 00:14:59,079
constraints and its kind of cousin I'm
going to do that a lot and I don't like

231
00:14:59,079 --> 00:15:00,510
to repeat myself

232
00:15:00,510 --> 00:15:04,820
so I subclass if asked s client

233
00:15:04,820 --> 00:15:08,699
and I have far a much more friendly

234
00:15:08,699 --> 00:15:13,120
API test nine that I can use my tests
and he it is in this example

235
00:15:13,120 --> 00:15:17,709
II I have my client ass self client
might unit test class

236
00:15:17,709 --> 00:15:21,510
and up I just say post

237
00:15:21,510 --> 00:15:24,720
to create ever source that sends a POST
request

238
00:15:24,720 --> 00:15:29,300
I I passed the URL an 80 the data asset
by from dictionary

239
00:15:29,300 --> 00:15:32,670
so we're gonna create something here and

240
00:15:32,670 --> 00:15:35,959
then if that request I'll went through I
get

241
00:15:35,959 --> 00:15:40,220
the response object from flask thats RV
response value

242
00:15:40,220 --> 00:15:43,570
an able to get the decoded Jason acid
dictionary

243
00:15:43,570 --> 00:15:47,690
in case I need to check stuff that came
with the response

244
00:15:47,690 --> 00:15:51,589
in this case I make sure that on Ralph
returned to a1

245
00:15:51,589 --> 00:15:55,079
and then I capture my location URL

246
00:15:55,079 --> 00:15:59,620
now I know where susan let's so I can
continue on my test

247
00:15:59,620 --> 00:16:04,300
and now ask papi to give me something

248
00:16:04,300 --> 00:16:08,100
and I can make sure that down to got
written two hundred

249
00:16:08,100 --> 00:16:12,690
and that the name is Susan and that the
URL is the URL

250
00:16:12,690 --> 00:16:16,269
the correct URL and you can keep going
like this and if you look at the gate

251
00:16:16,269 --> 00:16:18,750
have example you see lots of tests

252
00:16:18,750 --> 00:16:25,750
like this they're very readable very you
mean my opinion very beautiful

253
00:16:27,199 --> 00:16:31,230
so this was simple so if you thought
that was not simple then you can leave

254
00:16:31,230 --> 00:16:31,649
now

255
00:16:31,649 --> 00:16:36,339
because now it's gonna get really really
crazy

256
00:16:36,339 --> 00:16:39,699
so

257
00:16:39,699 --> 00:16:44,649
this very important unless you are doing
a

258
00:16:44,649 --> 00:16:48,430
small API project that you're running so
your home

259
00:16:48,430 --> 00:16:52,019
you should authenticate your API you
never want to leave an API open to

260
00:16:52,019 --> 00:16:53,540
anyone

261
00:16:53,540 --> 00:16:56,790
so when a look at that and

262
00:16:56,790 --> 00:17:00,160
for this I initially I use to right

263
00:17:00,160 --> 00:17:03,680
my own cold like you know like like a
with you

264
00:17:03,680 --> 00:17:06,689
but I found that specifically for
authentication there are a number of

265
00:17:06,689 --> 00:17:10,390
things that you always need to do that
they are the same for every project

266
00:17:10,390 --> 00:17:13,459
so I ended up writing flask HDTV

267
00:17:13,459 --> 00:17:16,539
all is an extension that on its

268
00:17:16,539 --> 00:17:20,059
its very simple chest takes care of
handling the

269
00:17:20,059 --> 00:17:25,270
HTTP headers for me so

270
00:17:25,270 --> 00:17:28,339
all you need to do is provide a function

271
00:17:28,339 --> 00:17:32,460
that verifies that the user name and
password are your back

272
00:17:32,460 --> 00:17:36,330
and decorated with my decorator

273
00:17:36,330 --> 00:17:40,210
this extension provides is the greater

274
00:17:40,210 --> 00:17:43,559
so function gets the username and the
password

275
00:17:43,559 --> 00:17:46,950
loves the user name and up and then

276
00:17:46,950 --> 00:17:50,240
on personally your you sir knows

277
00:17:50,240 --> 00:17:54,630
for the delay so you said yes the the
user knows how to validate a pass or so

278
00:17:54,630 --> 00:17:58,780
like I just asked the model to tell me
if the password is correct

279
00:17:58,780 --> 00:18:03,410
and the french would country with its
fired from falls from here

280
00:18:03,410 --> 00:18:06,770
the extension will not let the requester
it will return 41

281
00:18:06,770 --> 00:18:13,390
instead

282
00:18:13,390 --> 00:18:16,809
so how does this work you need to tell

283
00:18:16,809 --> 00:18:20,299
extension which routes you need to be
password-protected

284
00:18:20,299 --> 00:18:24,850
you may not want all of them are
protected and

285
00:18:24,850 --> 00:18:28,940
I'm pretty myself here but that is done
with a decorator

286
00:18:28,940 --> 00:18:33,309
so each decorated function any as you
can see you have multiple decorators in

287
00:18:33,309 --> 00:18:35,140
function in order

288
00:18:35,140 --> 00:18:38,910
so you decorate the function and a you
know

289
00:18:38,910 --> 00:18:42,539
that'd that's all you need to do did the
body at the function didn't change

290
00:18:42,539 --> 00:18:47,760
that's thats identical to what it was
before but now I know that

291
00:18:47,760 --> 00:18:52,150
if I if the client doesn't provide
correct credentials

292
00:18:52,150 --> 00:18:58,020
this is not gonna run

293
00:18:58,020 --> 00:19:01,419
so maybe repetitive to say

294
00:19:01,419 --> 00:19:05,000
you know log in required on every route
of your API

295
00:19:05,000 --> 00:19:09,299
if you have a large API and more often
than not you want to protect all your

296
00:19:09,299 --> 00:19:10,940
API and points

297
00:19:10,940 --> 00:19:14,280
with passwords so one little trick that
you can use

298
00:19:14,280 --> 00:19:17,280
decades to set up a before request

299
00:19:17,280 --> 00:19:20,940
handler this is a flask feature you can
set up

300
00:19:20,940 --> 00:19:24,350
again with the greater function that is
called before any

301
00:19:24,350 --> 00:19:28,600
requests are called so that this is one
function that it's called for any

302
00:19:28,600 --> 00:19:29,230
requests

303
00:19:29,230 --> 00:19:33,160
regardless of where Eagles will fight
and then needs to run

304
00:19:33,160 --> 00:19:36,950
so did this is the one place where you
can do common work that applies to all

305
00:19:36,950 --> 00:19:37,919
your API

306
00:19:37,919 --> 00:19:42,440
and what I do here I I'd stick my own
decorator

307
00:19:42,440 --> 00:19:45,730
siddig rate this instead of the rocks

308
00:19:45,730 --> 00:19:52,730
so then I don't need to the great any
other routes

309
00:19:55,789 --> 00:19:59,630
now some people are like to send use in
a minute

310
00:19:59,630 --> 00:20:02,940
and passwords constantly its it can be
seen as a key

311
00:20:02,940 --> 00:20:06,950
risk even though you should be using
secure HTTP

312
00:20:06,950 --> 00:20:10,830
the fact that the client needs to handle
the passwords and its server needs and

313
00:20:10,830 --> 00:20:12,470
the passwords

314
00:20:12,470 --> 00:20:16,020
up could mean some some sort of risk so

315
00:20:16,020 --> 00:20:19,120
did traditional way to do this is to

316
00:20:19,120 --> 00:20:22,549
not use the password it use
authentication token

317
00:20:22,549 --> 00:20:26,780
and you can decide with the tokens are
you you can make them expire double

318
00:20:26,780 --> 00:20:30,299
you can make them permanent you can make
in Revo couple

319
00:20:30,299 --> 00:20:33,750
there are many ways to do this and I
have one implementation in the source

320
00:20:33,750 --> 00:20:34,549
code that you can

321
00:20:34,549 --> 00:20:37,549
you can check out but up

322
00:20:37,549 --> 00:20:40,789
essentially I just for plates my verify
password:

323
00:20:40,789 --> 00:20:43,900
handler for flask HTTP of with

324
00:20:43,900 --> 00:20:47,220
you know a function to verify still
talkin that'd

325
00:20:47,220 --> 00:20:50,260
this case and I'm passing to talk in a
season name

326
00:20:50,260 --> 00:20:54,350
inundate HTTP of education

327
00:20:54,350 --> 00:21:01,350
headers and I don't use the password the
passwords and used can be empty

328
00:21:03,909 --> 00:21:07,330
so thats that's a predication

329
00:21:07,330 --> 00:21:10,580
on that's fine but that means

330
00:21:10,580 --> 00:21:13,730
you using someone else's decorators &
you

331
00:21:13,730 --> 00:21:17,880
its my to graders but for you I'm
someone else

332
00:21:17,880 --> 00:21:21,450
what I think their real power a flask is

333
00:21:21,450 --> 00:21:25,570
when you design your own decorators for
your API

334
00:21:25,570 --> 00:21:29,419
there are specific to your case is so

335
00:21:29,419 --> 00:21:32,929
only travel showed and with return

336
00:21:32,929 --> 00:21:35,960
Jason if I right and sometimes

337
00:21:35,960 --> 00:21:39,020
I did say to Jason to the object and
then I

338
00:21:39,020 --> 00:21:44,539
Jason if I that that's gonna repetitive
I don't need to see that in my friends

339
00:21:44,539 --> 00:21:47,720
so how about this

340
00:21:47,720 --> 00:21:50,720
archer's decorate my routes with Jason

341
00:21:50,720 --> 00:21:55,150
and then I can return it dictionary

342
00:21:55,150 --> 00:21:58,460
that's the top case this is it an
example the initial before it returns

343
00:21:58,460 --> 00:22:01,850
the authentication token so I just
returned

344
00:22:01,850 --> 00:22:05,130
the dictionary don't worry about Jason

345
00:22:05,130 --> 00:22:09,090
and then did the second example action
before

346
00:22:09,090 --> 00:22:12,530
I don't even converted to Jason tax
return an option

347
00:22:12,530 --> 00:22:15,970
model

348
00:22:15,970 --> 00:22:19,289
and you may be thinking yeah but the
decorator must be

349
00:22:19,289 --> 00:22:22,510
ugly long difficult

350
00:22:22,510 --> 00:22:27,860
and this is the decorator that's all you
need to do

351
00:22:27,860 --> 00:22:32,350
so when you write it by from the greater
you have a a small amount of boilerplate

352
00:22:32,350 --> 00:22:36,890
and I'm not gonna go that I don't even I
can claim that I remember

353
00:22:36,890 --> 00:22:39,950
exactly what those things to realize
that the top

354
00:22:39,950 --> 00:22:43,169
are but I just copy them from the
greater

355
00:22:43,169 --> 00:22:46,280
want to the next and they work

356
00:22:46,280 --> 00:22:49,919
important thing as the body this is

357
00:22:49,919 --> 00:22:53,740
the code that will run as a rapper
before your fun children's

358
00:22:53,740 --> 00:22:57,200
went when you have the function
decorator and in this context

359
00:22:57,200 --> 00:23:00,309
the original function is F so

360
00:23:00,309 --> 00:23:03,520
this rapper can call effort anytime

361
00:23:03,520 --> 00:23:07,940
so what are you hearing I collapse that
that's my original function

362
00:23:07,940 --> 00:23:11,350
and then if if I don't get a dictionary
and I've got

363
00:23:11,350 --> 00:23:15,460
model so I called Jason I

364
00:23:15,460 --> 00:23:19,010
now I have a dictionary so when I do
it's like a fun fight

365
00:23:19,010 --> 00:23:24,919
and done

366
00:23:24,919 --> 00:23:29,929
but that's the simple we need to do
something more fun stuff

367
00:23:29,929 --> 00:23:34,870
so one important thing we have any prob
openness to

368
00:23:34,870 --> 00:23:38,200
make sure that clients on abuse it

369
00:23:38,200 --> 00:23:42,590
and one way is to limit the rate at
which clients can make

370
00:23:42,590 --> 00:23:45,679
calls into it

371
00:23:45,679 --> 00:23:49,500
so how about this I decorate

372
00:23:49,500 --> 00:23:52,640
any router I want and I David

373
00:23:52,640 --> 00:23:56,110
limit number limited number of trying
and up

374
00:23:56,110 --> 00:23:59,760
a interval so in this example this route

375
00:23:59,760 --> 00:24:05,330
can be called up to five times for
fifteen second period

376
00:24:05,330 --> 00:24:11,059
everything else to say I didn't change
anything just put the decorator

377
00:24:11,059 --> 00:24:14,580
now a if you have an API that you want
to rate limit

378
00:24:14,580 --> 00:24:18,400
globally so you want all did and
pointing to a guy to be

379
00:24:18,400 --> 00:24:21,740
rate limit it together then weakened I'm
natin

380
00:24:21,740 --> 00:24:25,090
much on this here but you can argues the
same before request

381
00:24:25,090 --> 00:24:28,400
trick ratio for authentication just
decorate

382
00:24:28,400 --> 00:24:31,450
the before request you're a limit that
one

383
00:24:31,450 --> 00:24:34,640
and that would prevent you know the
whole API to be

384
00:24:34,640 --> 00:24:40,480
access to more than what you want

385
00:24:40,480 --> 00:24:43,690
and Isis this implementation still not
that

386
00:24:43,690 --> 00:24:48,370
terrible what's things will come in
future slides

387
00:24:48,370 --> 00:24:51,770
up I'm using a helper class

388
00:24:51,770 --> 00:24:55,419
I don't want to mix things so

389
00:24:55,419 --> 00:24:59,490
the rate-limiting functionality is in a
class it's called rate limit

390
00:24:59,490 --> 00:25:02,580
implementation is it's in the source
code if you wanna

391
00:25:02,580 --> 00:25:06,630
gun how to do this are its it is this
readiness

392
00:25:06,630 --> 00:25:11,110
storage better than many other ways to
the way that they are even packages to

393
00:25:11,110 --> 00:25:11,620
do this

394
00:25:11,620 --> 00:25:15,630
so you can unity is my implementation if
you don't like it

395
00:25:15,630 --> 00:25:19,850
are but anyway this works by up

396
00:25:19,850 --> 00:25:23,260
signing a unique key to the function

397
00:25:23,260 --> 00:25:26,480
that a it's getting cold which is F

398
00:25:26,480 --> 00:25:30,429
that name and the IP address of the
client

399
00:25:30,429 --> 00:25:34,669
which last gets me ass from out address

400
00:25:34,669 --> 00:25:38,779
so that's why you Nikki and I give it to
my great manager

401
00:25:38,779 --> 00:25:42,370
and if they rate monitors says yes

402
00:25:42,370 --> 00:25:46,120
I then called af which is my original
function

403
00:25:46,120 --> 00:25:50,200
if the limiter says that this client is
over the limit

404
00:25:50,200 --> 00:25:55,900
I send a too many requests ever so I
could've said here

405
00:25:55,900 --> 00:26:01,100
abort 429 that's the HTTP code for too
many requests

406
00:26:01,100 --> 00:26:04,450
but remember that I said that I prefer
to wrap all my errors

407
00:26:04,450 --> 00:26:07,730
with helper functions and when you see
this

408
00:26:07,730 --> 00:26:11,409
you understand what it means if if you
say if I said

409
00:26:11,409 --> 00:26:15,150
you know I bought for 29 you have to go
look up what that means

410
00:26:15,150 --> 00:26:22,150
so this is better

411
00:26:22,950 --> 00:26:25,950
agitation so all the time protection on

412
00:26:25,950 --> 00:26:29,269
I just get older elements in my
collections

413
00:26:29,269 --> 00:26:33,039
and return them that be a burden for
client and the server

414
00:26:33,039 --> 00:26:37,630
may decline has a very small screen can
display only fight students at a time so

415
00:26:37,630 --> 00:26:38,919
why get its house in

416
00:26:38,919 --> 00:26:43,740
right if that's that's that decides same
thing for for the server

417
00:26:43,740 --> 00:26:47,350
many in ABA expensive query to get

418
00:26:47,350 --> 00:26:50,480
it I'll send any the client wants five
then I should be in a fight

419
00:26:50,480 --> 00:26:54,210
so

420
00:26:54,210 --> 00:27:00,769
this that said dysfunction

421
00:27:00,769 --> 00:27:04,080
when it's decorated with my passion 8
decorator

422
00:27:04,080 --> 00:27:07,529
needs to return a database query that
still

423
00:27:07,529 --> 00:27:11,970
to be run this is a equity that's ready
to run but hasn't run yet

424
00:27:11,970 --> 00:27:16,010
in this case and returning the query
from

425
00:27:16,010 --> 00:27:23,010
my relationship and Isis

426
00:27:23,250 --> 00:27:27,799
this is the the way the response looks
so that this is what the client will

427
00:27:27,799 --> 00:27:28,299
receive

428
00:27:28,299 --> 00:27:31,529
the very top you can see the URL's list

429
00:27:31,529 --> 00:27:35,200
well for you for registration your else

430
00:27:35,200 --> 00:27:38,580
and then

431
00:27:38,580 --> 00:27:41,659
the decorator inserts a second key in
this response

432
00:27:41,659 --> 00:27:44,840
cometa and in it the

433
00:27:44,840 --> 00:27:49,190
us he list of things that are useful for
clients that want to build

434
00:27:49,190 --> 00:27:54,250
pagination buttons links so he did the
page number

435
00:27:54,250 --> 00:27:59,130
items per page: number of items to
number of pages

436
00:27:59,130 --> 00:28:02,559
I have a previous link because this page
1

437
00:28:02,559 --> 00:28:05,929
so it knows that there's no previous
this next

438
00:28:05,929 --> 00:28:12,929
the first time last and this is how it's
implemented

439
00:28:14,600 --> 00:28:17,730
so just make sure

440
00:28:17,730 --> 00:28:21,130
that that the extended and in a separate
they simply parts

441
00:28:21,130 --> 00:28:24,850
this it's the middle part this is when

442
00:28:24,850 --> 00:28:28,690
I've run the original function that
returns to query

443
00:28:28,690 --> 00:28:32,080
when I get a query II paginated

444
00:28:32,080 --> 00:28:36,250
this is a feature a flask sequel Oconee
that's very nice

445
00:28:36,250 --> 00:28:40,000
you you can give it a page number and
page cites

446
00:28:40,000 --> 00:28:43,260
and it returns a pic such an Asian
object house

447
00:28:43,260 --> 00:28:46,620
a lot of useful information for for
building

448
00:28:46,620 --> 00:28:49,769
you know the links in addition to the
items themselves

449
00:28:49,769 --> 00:28:53,649
so page and per page

450
00:28:53,649 --> 00:28:57,309
coming from the querystring of the URL

451
00:28:57,309 --> 00:29:00,980
so above the query

452
00:29:00,980 --> 00:29:04,379
lines you can see that I get

453
00:29:04,379 --> 00:29:08,019
questioning variables page after page

454
00:29:08,019 --> 00:29:11,639
which I can get from flask a flask
request object

455
00:29:11,639 --> 00:29:15,629
request or arts haz that that dictionary
with all the

456
00:29:15,629 --> 00:29:18,760
all that questioning arguments

457
00:29:18,760 --> 00:29:22,700
and I have to make sure that I use the
faults if those are not present because

458
00:29:22,700 --> 00:29:23,100
the

459
00:29:23,100 --> 00:29:26,409
the client doesn't know about these so
the first time he asks

460
00:29:26,409 --> 00:29:30,440
about this collection it it's not gonna
send any pagination links

461
00:29:30,440 --> 00:29:33,940
which is sake in the old and I'm I'm
gonna

462
00:29:33,940 --> 00:29:36,960
I'm not going to be keep it all

463
00:29:36,960 --> 00:29:41,730
I'm gonna get it in this case the first
10 up

464
00:29:41,730 --> 00:29:45,899
below that back in eight call is where I
build

465
00:29:45,899 --> 00:29:49,490
that made a dictionary with all the
links and

466
00:29:49,490 --> 00:29:53,529
I'm using URL for to build links
produced

467
00:29:53,529 --> 00:29:56,679
I mean it its few lines of code but
there's nothing really

468
00:29:56,679 --> 00:30:00,279
you know no rocket science there still
the dictionary

469
00:30:00,279 --> 00:30:03,519
and then at the bottom I returned the
chase on a fight

470
00:30:03,519 --> 00:30:07,419
you know version of that the cherry with
the two keys the URL's

471
00:30:07,419 --> 00:30:14,419
and the net cashing

472
00:30:15,320 --> 00:30:18,370
so

473
00:30:18,370 --> 00:30:22,129
I thought long about get example show
for this and I

474
00:30:22,129 --> 00:30:26,129
decided to to go with a

475
00:30:26,129 --> 00:30:29,139
no cash example are

476
00:30:29,139 --> 00:30:32,950
so I have a route never turns
authentication tokens

477
00:30:32,950 --> 00:30:37,350
and I want to make sure that

478
00:30:37,350 --> 00:30:41,850
to client is not cash that because it's
sensitive so

479
00:30:41,850 --> 00:30:48,659
about a say it like this by having this
decorator

480
00:30:48,659 --> 00:30:52,080
their response will be enhanced

481
00:30:52,080 --> 00:30:55,440
with the cache-control header who tell
the client

482
00:30:55,440 --> 00:31:02,440
to not cash this to turn away

483
00:31:03,129 --> 00:31:07,129
and this is how it's implemented for
this I decided to

484
00:31:07,129 --> 00:31:11,330
implement the crater that it's a generic
version of the cache-control that's at

485
00:31:11,330 --> 00:31:13,220
the top

486
00:31:13,220 --> 00:31:16,659
this one takes in this tough
cache-control: directives

487
00:31:16,659 --> 00:31:20,669
and chest sticks and in their response
and

488
00:31:20,669 --> 00:31:24,500
that's that's I just make response
object

489
00:31:24,500 --> 00:31:28,520
from response return by the original
function

490
00:31:28,520 --> 00:31:33,119
and and Justin at the cache-control

491
00:31:33,119 --> 00:31:37,559
and Inferno no cash specifically I you
can see that at the bottom I

492
00:31:37,559 --> 00:31:41,080
just create an instance of that the
other the greater

493
00:31:41,080 --> 00:31:44,119
with the specifics you know that those
three keys

494
00:31:44,119 --> 00:31:47,210
data were directed staff to that mean

495
00:31:47,210 --> 00:31:54,210
do not cash this

496
00:31:54,580 --> 00:31:57,190
but that's not hold you can do with
caching

497
00:31:57,190 --> 00:32:01,259
the the nice thing a when you follow the
rest for principals more or less

498
00:32:01,259 --> 00:32:05,490
to the doc then you get cashing

499
00:32:05,490 --> 00:32:10,080
you advance cash in for free if

500
00:32:10,080 --> 00:32:14,409
if you have responses that are useful if
the client can cash

501
00:32:14,409 --> 00:32:18,769
then you can save a lot on band with so
for example if

502
00:32:18,769 --> 00:32:22,059
decline house response that on that it's
in the cash

503
00:32:22,059 --> 00:32:25,059
Arctic Lankans ask the server if

504
00:32:25,059 --> 00:32:28,179
that response is still valid and if the
service a

505
00:32:28,179 --> 00:32:31,909
yes then does not need to transfer that
responsible for the network again

506
00:32:31,909 --> 00:32:34,929
now one of the mechanisms that a

507
00:32:34,929 --> 00:32:38,399
the HTTP protocol uses for this it's
called any tax

508
00:32:38,399 --> 00:32:42,950
the tax and this is how I do it

509
00:32:42,950 --> 00:32:48,269
the only change so the

510
00:32:48,269 --> 00:32:51,529
how beautiful this you know i i still
marvel at

511
00:32:51,529 --> 00:32:55,070
how concise and beautiful this rockets

512
00:32:55,070 --> 00:32:58,799
I Q U you can read it and you understand
everything it does

513
00:32:58,799 --> 00:33:02,080
so the eat at best

514
00:33:02,080 --> 00:33:05,179
a couple things it generates any tag

515
00:33:05,179 --> 00:33:08,700
and a tag it's basically a cold

516
00:33:08,700 --> 00:33:11,980
that proper sense that version of that
request

517
00:33:11,980 --> 00:33:17,320
I'm sorry that resource and when their
source changes you have to change

518
00:33:17,320 --> 00:33:20,429
to and a purse or doesn't change you
keep the same time

519
00:33:20,429 --> 00:33:24,830
that's it the client caches

520
00:33:24,830 --> 00:33:27,899
divers the response and it remembers
attack

521
00:33:27,899 --> 00:33:30,960
and then you can ask the server if that
tag still

522
00:33:30,960 --> 00:33:36,399
you know batting so this

523
00:33:36,399 --> 00:33:40,389
yes the implementation desist this is
the last one so I'm almost done

524
00:33:40,389 --> 00:33:43,950
another ago you know in detail

525
00:33:43,950 --> 00:33:48,119
but if you understand how the HTTP

526
00:33:48,119 --> 00:33:52,759
conditional requests work this this is
the if match in if non

527
00:33:52,759 --> 00:33:56,080
much headers ended

528
00:33:56,080 --> 00:33:59,769
request then on this is hopefully

529
00:33:59,769 --> 00:34:03,039
would be very simple for you to
understand the energy tax

530
00:34:03,039 --> 00:34:07,389
that I generate on you can see somewhere
in the middle there

531
00:34:07,389 --> 00:34:10,780
right after make response are

532
00:34:10,780 --> 00:34:14,240
pretty generic I just take the Jason
taxed

533
00:34:14,240 --> 00:34:18,629
and I get an md5 hash this is you can
say this is

534
00:34:18,629 --> 00:34:24,200
expensive this is very generic it will
work with anything

535
00:34:24,200 --> 00:34:27,839
of course for for specific application
you can

536
00:34:27,839 --> 00:34:31,260
can have more efficient anti-tax

537
00:34:31,260 --> 00:34:34,960
on depends and you know that's up

538
00:34:34,960 --> 00:34:38,679
basically thats when I have

539
00:34:38,679 --> 00:34:45,679
50

540
00:34:50,119 --> 00:34:51,179
ok so

541
00:34:51,179 --> 00:34:54,779
yes if there are any questions you need
to use the microphone

542
00:34:54,779 --> 00:35:01,779
to the middle

543
00:35:09,150 --> 00:35:14,890
I left everyone confused great
anticipation higher

544
00:35:14,890 --> 00:35:18,110
I so am i was just wondering

545
00:35:18,110 --> 00:35:21,740
what do you think it's best when you
gettin with for

546
00:35:21,740 --> 00:35:25,940
creating a resource will be Jason in the
people's body

547
00:35:25,940 --> 00:35:30,880
for would be like key values or at still

548
00:35:30,880 --> 00:35:34,390
UAE it's your choice that the raffle
principles

549
00:35:34,390 --> 00:35:38,420
don't say how we needs to be done I
think Jason is

550
00:35:38,420 --> 00:35:41,570
it's good it's definitely helpful for
the client

551
00:35:41,570 --> 00:35:44,800
because if the client JavaScript its its
gonna

552
00:35:44,800 --> 00:35:48,010
you know native for the client and

553
00:35:48,010 --> 00:35:52,680
yeah I it has to be in the body so
definitely in the body

554
00:35:52,680 --> 00:35:55,730
not everywhere else you can be XML if
you prefer

555
00:35:55,730 --> 00:35:59,760
that over Jason by Kapadia

556
00:35:59,760 --> 00:36:03,910
its key values as Jason that that would
be my preference

557
00:36:03,910 --> 00:36:08,070
thank you hi

558
00:36:08,070 --> 00:36:11,360
and to questions my first questions
about your extension

559
00:36:11,360 --> 00:36:15,920
on HDPE of medication I was wondering
does your plugin

560
00:36:15,920 --> 00:36:19,620
sport digest authentication and

561
00:36:19,620 --> 00:36:23,470
if it does not the nice where next week
and I'm sending you upon request

562
00:36:23,470 --> 00:36:27,300
because right okay I am I said he
sometimes because it does

563
00:36:27,300 --> 00:36:31,240
does alright you are my best man right
now

564
00:36:31,240 --> 00:36:35,220
so yeah check it out outdated where you
use it it's a little bit different

565
00:36:35,220 --> 00:36:38,590
so you don't wear a shield here I

566
00:36:38,590 --> 00:36:41,620
twenty different packets in the docs so
chica okay

567
00:36:41,620 --> 00:36:46,590
and my second question is when you
should when you show us

568
00:36:46,590 --> 00:36:51,320
your route for resource collections was
a reason why you only returned with the

569
00:36:51,320 --> 00:36:52,580
URL's and you didn't

570
00:36:52,580 --> 00:36:56,760
returned deal that accompanied URL's for
example your students

571
00:36:56,760 --> 00:37:00,950
why did you send on URL's not the first
name and last name for all the students

572
00:37:00,950 --> 00:37:04,100
list users way a yes there's a reason

573
00:37:04,100 --> 00:37:08,000
cell a lot of people who whatcha say and
it's perfectly fine

574
00:37:08,000 --> 00:37:11,590
but if you wanna take advantage of
cashing then

575
00:37:11,590 --> 00:37:14,670
I its best that you return

576
00:37:14,670 --> 00:37:17,740
ever source in only one way right

577
00:37:17,740 --> 00:37:20,870
so that's why my lists have URL's

578
00:37:20,870 --> 00:37:24,110
and then the client can go get the URL
only so that I can optimize

579
00:37:24,110 --> 00:37:27,240
my cashing there's only one place where
the

580
00:37:27,240 --> 00:37:30,790
you know the students in this example I
cash and that's the individual

581
00:37:30,790 --> 00:37:35,160
URL's thank you are so I

582
00:37:35,160 --> 00:37:38,730
two quick questions are first one is do
you support patch

583
00:37:38,730 --> 00:37:42,370
hi I don't but you can you can its easy

584
00:37:42,370 --> 00:37:48,010
had it's your choice yes your and the
second one is it is a possible do

585
00:37:48,010 --> 00:37:53,380
on specify a partial consumption up the
URL so in other words if you're

586
00:37:53,380 --> 00:37:56,650
resource lives 45

587
00:37:56,650 --> 00:38:00,160
path components deep you can say

588
00:38:00,160 --> 00:38:03,390
%uh you know I can consume the first to
pass components

589
00:38:03,390 --> 00:38:06,930
and that would return an object that it
would know how to consume the

590
00:38:06,930 --> 00:38:10,150
last three autonomous Kurdish away in
flask to say

591
00:38:10,150 --> 00:38:13,890
from this point on put everything that's
you note to the right

592
00:38:13,890 --> 00:38:17,530
in one argument its cool path

593
00:38:17,530 --> 00:38:21,400
so you get the path when you're out
there is an argument and then you can

594
00:38:21,400 --> 00:38:27,140
person and whatever you need with it its
hi

595
00:38:27,140 --> 00:38:31,160
earlier you showed the log in required
decorator and you also show that if you

596
00:38:31,160 --> 00:38:32,250
needed to

597
00:38:32,250 --> 00:38:36,490
decree all your routes did you put than
ever before quest arm

598
00:38:36,490 --> 00:38:39,880
what's normal pattern you have to do
that for every route except for the blog

599
00:38:39,880 --> 00:38:43,180
route cuz you're not that lucky and very
good question but so this is an example

600
00:38:43,180 --> 00:38:43,780
code

601
00:38:43,780 --> 00:38:47,790
on again have time to talk about other
things

602
00:38:47,790 --> 00:38:52,830
last us so class imports blueprints with
blueprints you can create group of

603
00:38:52,830 --> 00:38:56,360
routes that are I'll you know

604
00:38:56,360 --> 00:38:59,870
that that have some logical you know
meaning

605
00:38:59,870 --> 00:39:04,380
together so if you have to blueprints
are you have one for your routes

606
00:39:04,380 --> 00:39:07,500
and 14 for this one

607
00:39:07,500 --> 00:39:11,420
route that advertise talkin for example
if they're separate

608
00:39:11,420 --> 00:39:15,350
then you can have different before
requests for each article

609
00:39:15,350 --> 00:39:18,470
so

610
00:39:18,470 --> 00:39:22,860
analyst um I missus is image 26 have
occurred but

611
00:39:22,860 --> 00:39:26,470
a lot of what you're doing your
decorators

612
00:39:26,470 --> 00:39:30,480
like special rate-limiting or %ah cash
turning off cashing

613
00:39:30,480 --> 00:39:34,650
is the kind of thing that you'd often 1
p.m. you to configure like

614
00:39:34,650 --> 00:39:38,550
deploy time configuration or even
runtime configuration

615
00:39:38,550 --> 00:39:42,440
arm at I was wondering if you could
maybe elaborate a little bit

616
00:39:42,440 --> 00:39:46,540
on any expensive have not had a period
like

617
00:39:46,540 --> 00:39:50,360
for instance maybe you wanted I'm

618
00:39:50,360 --> 00:39:53,810
what you're showing like if you were to
say 12

619
00:39:53,810 --> 00:39:57,320
turn off rate-limiting in debt right
that's a code change

620
00:39:57,320 --> 00:40:00,500
for that environment as opposed to just
configuration change those winning if

621
00:40:00,500 --> 00:40:01,060
you could

622
00:40:01,060 --> 00:40:04,580
so hot celebrity mitterrand that's a
good point at in show

623
00:40:04,580 --> 00:40:08,480
configuration I according Omar might
parameters here

624
00:40:08,480 --> 00:40:12,210
but I'll flask ass a configuration
object and you can

625
00:40:12,210 --> 00:40:15,370
its it's very simple key-value

626
00:40:15,370 --> 00:40:19,580
list so you can set any configuration
that you want in the configuration

627
00:40:19,580 --> 00:40:22,590
object and argues it from there

628
00:40:22,590 --> 00:40:25,810
that this at answer your question you
have to do it like I did

629
00:40:25,810 --> 00:40:30,080
here which is you know for even even
towards

630
00:40:30,080 --> 00:40:34,300
I can hear you my even towards like like
sys admin tools like

631
00:40:34,300 --> 00:40:38,670
actually run time management system as
opposed to just

632
00:40:38,670 --> 00:40:42,430
up should if you prefer to the outside
of this

633
00:40:42,430 --> 00:40:47,980
it's not a problem but to

634
00:40:47,980 --> 00:40:51,410
so we we saw Mike tactic

635
00:40:51,410 --> 00:40:55,280
great in required Jimmy

636
00:40:55,280 --> 00:40:59,160
it seems to me like years a lot of
decorator

637
00:40:59,160 --> 00:41:02,880
was like you removed some them from
slide to slide

638
00:41:02,880 --> 00:41:06,610
I am there was like a student query

639
00:41:06,610 --> 00:41:10,250
and in my imagination like 10 decorators
before

640
00:41:10,250 --> 00:41:13,800
and a was wondering if you

641
00:41:13,800 --> 00:41:17,230
it's a critique worth hey I was
wondering if you know

642
00:41:17,230 --> 00:41:20,750
miss library restful

643
00:41:20,750 --> 00:41:23,790
last restful and I here

644
00:41:23,790 --> 00:41:28,340
is very is there a reason you chose to
use like specifically decorators

645
00:41:28,340 --> 00:41:31,350
and not something which is

646
00:41:31,350 --> 00:41:35,710
X made for or making rest

647
00:41:35,710 --> 00:41:39,730
I think last case made to make reflect
the ice

648
00:41:39,730 --> 00:41:43,240
that it the way you express routes its
very restful

649
00:41:43,240 --> 00:41:46,370
in my opinion I actually I don't like

650
00:41:46,370 --> 00:41:50,500
last restful so done this in dept
because I

651
00:41:50,500 --> 00:41:54,800
I'm not using here I don't like it I
don't like it I can blog about it

652
00:41:54,800 --> 00:41:57,840
up but up

653
00:41:57,840 --> 00:42:02,040
but why wide

654
00:42:02,040 --> 00:42:05,240
perhaps like like I mean what what's

655
00:42:05,240 --> 00:42:09,230
one what's the main reason like us

656
00:42:09,230 --> 00:42:15,310
I like decorators said

657
00:42:15,310 --> 00:42:19,830
this is very readable and a I I don't
think a flash restful

658
00:42:19,830 --> 00:42:23,560
fights with their careers you can be
helpful optical

659
00:42:23,560 --> 00:42:27,030
for example that stressful has a very
nice

660
00:42:27,030 --> 00:42:30,330
marshalling module that you can use
instead of my

661
00:42:30,330 --> 00:42:34,980
home-grown way to generate a Jason
representation

662
00:42:34,980 --> 00:42:38,140
if you have a really big slurs then

663
00:42:38,140 --> 00:42:42,600
it might be you know be interesting to
use flask stressful for that

664
00:42:42,600 --> 00:42:46,700
for the robbing I really like flask
alone I prefer that

665
00:42:46,700 --> 00:42:50,730
to the the class based up your structure
for

666
00:42:50,730 --> 00:42:54,530
from fast national it's a preference so

667
00:42:54,530 --> 00:42:57,720
you know as I said at the beginning you
know you don't have to

668
00:42:57,720 --> 00:43:01,640
believe me on like what I say I mean
that the nice thing about

669
00:43:01,640 --> 00:43:04,760
Lasky said you and I both can do what we
like and

670
00:43:04,760 --> 00:43:07,800
you know it tolerate such bull so

671
00:43:07,800 --> 00:43:12,700
think

672
00:43:12,700 --> 00:43:15,820
first thank you for a great talk so

673
00:43:15,820 --> 00:43:20,330
my question I don't require a remember
all the details for your

674
00:43:20,330 --> 00:43:23,650
pagination decker so perhaps my

675
00:43:23,650 --> 00:43:28,720
questionable be malformed um if I recall
correctly you first return all

676
00:43:28,720 --> 00:43:32,540
the queer results but you only actually
end up

677
00:43:32,540 --> 00:43:36,140
returning you know King needed

678
00:43:36,140 --> 00:43:39,340
list that's not gonna but that's not how
it works

679
00:43:39,340 --> 00:43:43,740
okay the the function returns a query
this is a query that didn't run yet so

680
00:43:43,740 --> 00:43:44,650
it didn't

681
00:43:44,650 --> 00:43:49,020
you know you didn't use any resources
yet it's just a query that still to be

682
00:43:49,020 --> 00:43:49,780
run

683
00:43:49,780 --> 00:43:53,570
you prefer to query and then you return
it

684
00:43:53,570 --> 00:43:57,260
decorator gets that and instead of
running it the normal way

685
00:43:57,260 --> 00:44:02,400
a transit through dispatching a function
that comes with flasks ECLAC any

686
00:44:02,400 --> 00:44:06,150
and that gets only the one-page that the
client wants

687
00:44:06,150 --> 00:44:09,150
ok great thank you very much a waste
thank you

688
00:44:09,150 --> 00:44:11,290
yep okay I think we're done thank you


1
00:00:08,849 --> 00:00:11,440
good morning everybody I'm our first
argument

2
00:00:11,440 --> 00:00:14,789
is developing flask extensions by Rachel
Sanders

3
00:00:14,789 --> 00:00:18,360
she's over it LinkedIn is an organizer

4
00:00:18,360 --> 00:00:25,360
pilot season 7 disco so please give a
warm welcome

5
00:00:29,780 --> 00:00:33,580
a body I want to apologize in advance
for my voice I have caught the confluent

6
00:00:33,580 --> 00:00:34,730
like a couple days early

7
00:00:34,730 --> 00:00:38,890
so I will try my best not to sneeze and
ethanol love you but other

8
00:00:38,890 --> 00:00:42,790
thank you for giving warnings out there
we go %uh anyway welcome thank you so

9
00:00:42,790 --> 00:00:43,570
much for coming

10
00:00:43,570 --> 00:00:47,020
welcome to developing last extensions um

11
00:00:47,020 --> 00:00:52,470
before we get started a little bit about
me I am a pie ladies in this coordinator

12
00:00:52,470 --> 00:00:56,940
organizer and powder and what about
doing that I'm an engineer and technical

13
00:00:56,940 --> 00:00:58,110
lead at LinkedIn

14
00:00:58,110 --> 00:01:02,309
and at LinkedIn I code in Python all day

15
00:01:02,309 --> 00:01:05,330
every day and that's because LinkedIn's
internal stack

16
00:01:05,330 --> 00:01:08,820
is iPod I thought and flaps that to be
specific

17
00:01:08,820 --> 00:01:15,240
this so this talk came into something I
did it work for my team I needed to

18
00:01:15,240 --> 00:01:16,860
write an extension for them

19
00:01:16,860 --> 00:01:21,150
and I really struggled with getting
something reasonable together because

20
00:01:21,150 --> 00:01:24,909
there's not a lot of documentation up
there on reading extension and doing

21
00:01:24,909 --> 00:01:25,760
this kind of work

22
00:01:25,760 --> 00:01:30,050
so it turns out that flask is designed
to be expanded and

23
00:01:30,050 --> 00:01:33,360
actually I think very very
straightforward and so

24
00:01:33,360 --> 00:01:36,990
that's my goal at this talk for you all
the walk out of here thinking that

25
00:01:36,990 --> 00:01:40,530
extension development is just is
straightforward and easy as I think it

26
00:01:40,530 --> 00:01:40,829
is

27
00:01:40,829 --> 00:01:43,939
ok soloing talk about a

28
00:01:43,939 --> 00:01:47,350
we're gonna do it really really quick
introduction a for

29
00:01:47,350 --> 00:01:50,460
those of you who haven't worked with
laughter aren't familiar with it

30
00:01:50,460 --> 00:01:53,659
I promise it'll be very quick it'll be
like two minutes long

31
00:01:53,659 --> 00:01:58,420
and we'll talk about what it means to
extend flask over to spend most of the

32
00:01:58,420 --> 00:01:58,979
talk

33
00:01:58,979 --> 00:02:02,140
on a case study on this extension that I
wrote cell

34
00:02:02,140 --> 00:02:06,320
and we'll talk about how it works and
the implementation a bit it's a very

35
00:02:06,320 --> 00:02:07,409
simple extension

36
00:02:07,409 --> 00:02:10,420
it was like a hundred like the cone I've
connected down to quite a bit

37
00:02:10,420 --> 00:02:14,880
so what we see that very basic extension
we're gonna talk about

38
00:02:14,880 --> 00:02:18,740
where you can go from there for
nontrivial examples for non you know

39
00:02:18,740 --> 00:02:22,220
I kind of think so will go through a
case study in other a

40
00:02:22,220 --> 00:02:26,500
extensions that are good to learn from I
think and buy me when the questions

41
00:02:26,500 --> 00:02:30,990
okay so I thought of a number of ways to
do an introduction to this

42
00:02:30,990 --> 00:02:35,240
and the best way I could come up with
with just to show you a working-class

43
00:02:35,240 --> 00:02:36,310
complication

44
00:02:36,310 --> 00:02:39,870
this is a working-class complication

45
00:02:39,870 --> 00:02:43,300
if you pick install flask and run this
in a file

46
00:02:43,300 --> 00:02:47,680
what you'll get is adept server running
on port 5000 that

47
00:02:47,680 --> 00:02:51,379
with you load local host 5,000 in your
browser

48
00:02:51,379 --> 00:02:54,560
what you get is the word hello Cindy
hyping it there

49
00:02:54,560 --> 00:02:59,269
and okay so if you're coming from like
the Django or rails world

50
00:02:59,269 --> 00:03:02,519
you look at this and go that's great
nice

51
00:03:02,519 --> 00:03:05,750
hello world function okay with the rest
a bit

52
00:03:05,750 --> 00:03:10,500
where's where's my database where are my
forms where's my admin interface and

53
00:03:10,500 --> 00:03:14,440
left doesn't have any of the it is a
micro framework

54
00:03:14,440 --> 00:03:17,610
and this is pretty much what you get you
get

55
00:03:17,610 --> 00:03:21,860
route you get controllers its ships with
the temple dealing with ginger

56
00:03:21,860 --> 00:03:26,470
and has some session cookie stuff but
what you see in the slightest pretty

57
00:03:26,470 --> 00:03:27,540
much what you get

58
00:03:27,540 --> 00:03:32,390
and actually on purpose because the idea
a flask is to build a good foundation

59
00:03:32,390 --> 00:03:34,170
for all applications

60
00:03:34,170 --> 00:03:37,840
everything else is up to you or
extensions missus Armin

61
00:03:37,840 --> 00:03:41,510
who is the creator a flask laugh

62
00:03:41,510 --> 00:03:45,549
is at heart toolkit use it to build HTTP

63
00:03:45,549 --> 00:03:50,170
things and the core library is purposely
kept very small and focus to be

64
00:03:50,170 --> 00:03:54,400
good at doing that and that means that
most the stuff you need at the

65
00:03:54,400 --> 00:03:56,370
day-to-day application developer

66
00:03:56,370 --> 00:04:01,329
is all in the extension go system so
learning how to read extensions is a key

67
00:04:01,329 --> 00:04:01,879
part

68
00:04:01,879 --> 00:04:05,150
a learning how to write flask ok

69
00:04:05,150 --> 00:04:08,590
so let's talk about what it means to
extend lasso

70
00:04:08,590 --> 00:04:11,599
this is the same hello san dimas hi
application

71
00:04:11,599 --> 00:04:14,720
and the slide what really but what
requiring

72
00:04:14,720 --> 00:04:18,160
after min ago but if you look at like 3

73
00:04:18,160 --> 00:04:23,020
that Apple's law school it actually
doing a whole lot

74
00:04:23,020 --> 00:04:28,470
so it may use a a method on a call route
to map the route URL

75
00:04:28,470 --> 00:04:33,790
to that hello function and I don't know
if you've ever had to do anything I

76
00:04:33,790 --> 00:04:34,850
programming which

77
00:04:34,850 --> 00:04:39,910
I had to do back in my battle pearl days
but those three lines of code art

78
00:04:39,910 --> 00:04:43,040
a lighting over a hi love magic or doing

79
00:04:43,040 --> 00:04:46,060
inbound routing at we have some string
that we're somehow

80
00:04:46,060 --> 00:04:50,220
translating into I can ATT be
responsible for the lot of stuff going

81
00:04:50,220 --> 00:04:51,220
on there

82
00:04:51,220 --> 00:04:55,340
and in the last one we're actually
taking off an entire dev

83
00:04:55,340 --> 00:04:58,830
test server so the takeaway is ap

84
00:04:58,830 --> 00:05:02,620
is at the heart a flat but app magic app
update with him in a college

85
00:05:02,620 --> 00:05:06,300
is that is where all the functionally
what flask is

86
00:05:06,300 --> 00:05:11,090
so it is the core and when we talk about
extending flask

87
00:05:11,090 --> 00:05:16,370
what we're really talking about is
changing that ap object and modifying it

88
00:05:16,370 --> 00:05:20,210
like I said flask is designed to be
extended and you can change the ap

89
00:05:20,210 --> 00:05:21,180
object

90
00:05:21,180 --> 00:05:24,600
in like lots of ways you can say pay

91
00:05:24,600 --> 00:05:29,970
when a request comes in let me have it
first so that I can look at it

92
00:05:29,970 --> 00:05:33,069
send mail response by what to or

93
00:05:33,069 --> 00:05:37,020
after the application is done looking at
it let me have it before goes out the

94
00:05:37,020 --> 00:05:38,180
door so I can do

95
00:05:38,180 --> 00:05:41,240
at cookies I can rewrite the response

96
00:05:41,240 --> 00:05:46,080
whatever I'm I can also give my end user
developers

97
00:05:46,080 --> 00:05:50,370
more resources I can point apt to wear
other things are like

98
00:05:50,370 --> 00:05:53,910
I can't tell it where other filters
aren't things I can extend ginger for

99
00:05:53,910 --> 00:05:54,819
them

100
00:05:54,819 --> 00:05:57,970
I can programmatically adding routes
blueprints

101
00:05:57,970 --> 00:06:01,190
with her last way up organizing code

102
00:06:01,190 --> 00:06:04,350
at our assets and things like that I'm

103
00:06:04,350 --> 00:06:08,430
I can wrap the app in middleware and i
cant even local pageant we will see an

104
00:06:08,430 --> 00:06:11,250
example that lead in the talk

105
00:06:11,250 --> 00:06:14,520
okay that is also super super super
dinner so

106
00:06:14,520 --> 00:06:19,509
look at a real real example here I'm
okay so I'm a team lead for a small

107
00:06:19,509 --> 00:06:23,250
kinda internal workflow we believe kinda
cool cooking

108
00:06:23,250 --> 00:06:26,720
and we wanted to move to continue with
integration weird playing every two

109
00:06:26,720 --> 00:06:30,280
weeks we want to play every day or every
other day

110
00:06:30,280 --> 00:06:33,840
so knowing if the bad wrong idea the
main site the mailing confided you all

111
00:06:33,840 --> 00:06:36,130
the news have had this for days and it's
like

112
00:06:36,130 --> 00:06:40,870
we are internal and we are sort of in
our own a little bit and

113
00:06:40,870 --> 00:06:44,220
we girlfriends we all try to make sure
all work in the same direction but

114
00:06:44,220 --> 00:06:45,099
sometimes

115
00:06:45,099 --> 00:06:48,650
by looking to go out this way the other
2012 the company or any other way

116
00:06:48,650 --> 00:06:52,830
we try to be consistent but sometimes
were we're a little bit different so it

117
00:06:52,830 --> 00:06:54,560
felt like I'm talking about a

118
00:06:54,560 --> 00:06:58,169
twelve-person company is head over 5,000
wanna at like so

119
00:06:58,169 --> 00:07:03,190
it up anyway so we needed a way when you
move to continues in Gration

120
00:07:03,190 --> 00:07:07,770
we needed a way to be able to commit and
deploy code that was not ready for users

121
00:07:07,770 --> 00:07:09,110
to see

122
00:07:09,110 --> 00:07:12,360
so up I wrote an extension to do that I

123
00:07:12,360 --> 00:07:16,380
Road extension to turn parts of the app
are of

124
00:07:16,380 --> 00:07:21,930
based on configuration I did not make up
the idiom it's called feature flagging

125
00:07:21,930 --> 00:07:25,069
therefore last feature flags

126
00:07:25,069 --> 00:07:28,990
so the actual extension that you can get
on pie PI

127
00:07:28,990 --> 00:07:32,550
and Gallatin get home a is about a
hundred lines of code

128
00:07:32,550 --> 00:07:38,020
and I could not fit that applied so
instead I have shrunk it down to about

129
00:07:38,020 --> 00:07:42,340
and 15 baby will f wines and I've done
that by

130
00:07:42,340 --> 00:07:46,039
cutting out all the functionality all
the air handling all the paranoia and

131
00:07:46,039 --> 00:07:49,800
anything I would want an actual
production library so

132
00:07:49,800 --> 00:07:53,729
don't judge a book by its heavily edited
Reader's Digest version

133
00:07:53,729 --> 00:07:56,879
now anyway okay so

134
00:07:56,879 --> 00:08:00,629
what do I do with our talk about you
with extension from the end user's point

135
00:08:00,629 --> 00:08:01,080
of view

136
00:08:01,080 --> 00:08:04,599
so if you were to download the fitness
expansion and use it

137
00:08:04,599 --> 00:08:07,490
let's talk about how that would work
first and then we'll go into the

138
00:08:07,490 --> 00:08:09,440
implementation details of it

139
00:08:09,440 --> 00:08:12,960
quick services are all friendly hello
sandy was high application

140
00:08:12,960 --> 00:08:16,940
I've cut out the demo test server for
space reason

141
00:08:16,940 --> 00:08:20,560
okay so extensions are just modules

142
00:08:20,560 --> 00:08:24,039
like models like anything else so you
import them import

143
00:08:24,039 --> 00:08:27,900
last ext features like as future left
give you this little

144
00:08:27,900 --> 00:08:30,900
indirection thing so the name and
extension actually of

145
00:08:30,900 --> 00:08:34,140
underscore Peter flag but I think this
is the support a way of doing it

146
00:08:34,140 --> 00:08:38,530
and I'm importing it alias to feature
because I can't say the other

147
00:08:38,530 --> 00:08:42,000
so I take that and then I instantiate an
object called

148
00:08:42,000 --> 00:08:46,170
feature flag and I feed at that magic ap
object

149
00:08:46,170 --> 00:08:49,810
so from the end user's point of view
this is all they have to do to configure

150
00:08:49,810 --> 00:08:50,090
this

151
00:08:50,090 --> 00:08:53,310
that it and now they can start using it

152
00:08:53,310 --> 00:08:56,620
okay the second thing I wanna have if
the module level

153
00:08:56,620 --> 00:09:00,160
function called is active it has one
argument

154
00:09:00,160 --> 00:09:04,460
which is the string that the name in the
future features are just rings

155
00:09:04,460 --> 00:09:07,610
and it supposed to return true the
pictures on or

156
00:09:07,610 --> 00:09:11,780
Paul the features of so you run this

157
00:09:11,780 --> 00:09:14,920
if feature is active icon well pack
enough

158
00:09:14,920 --> 00:09:19,100
below seventeen hi if you run this what
you actually get a hello sandy with high

159
00:09:19,100 --> 00:09:20,330
because

160
00:09:20,330 --> 00:09:23,380
I haven't actually find any pictures yet
sup

161
00:09:23,380 --> 00:09:28,670
let's talk about how we would do that so
in vanilla flask there's really only one

162
00:09:28,670 --> 00:09:29,560
place

163
00:09:29,560 --> 00:09:33,500
to store configuration like that and
it's called

164
00:09:33,500 --> 00:09:36,560
in the ap dot config on that magic ap
objectors

165
00:09:36,560 --> 00:09:40,580
a property called big which is mostly
like a dictionary

166
00:09:40,580 --> 00:09:44,860
and its stores config key names and
values

167
00:09:44,860 --> 00:09:48,850
so we're gonna call are configured up
feature flags

168
00:09:48,850 --> 00:09:53,120
and itself will be a dictionary so the
names of our

169
00:09:53,120 --> 00:09:56,400
the name of the key he's are going to be
the name for the feature

170
00:09:56,400 --> 00:10:00,080
and the valuable be bullying true the
features on

171
00:10:00,080 --> 00:10:05,090
also the features of so this is how you
would turn a feature on

172
00:10:05,090 --> 00:10:08,430
app.config feature flags will feature

173
00:10:08,430 --> 00:10:12,680
true I run this I will get hello i cud

174
00:10:12,680 --> 00:10:17,230
okay so this is great for the pipeline
like that the app developers like me but

175
00:10:17,230 --> 00:10:18,780
I want my pride and

176
00:10:18,780 --> 00:10:22,920
developers in my web dev to be able to
use this in the general area as well

177
00:10:22,920 --> 00:10:26,130
and to do that I'm gonna use a and thing
a ginger called

178
00:10:26,130 --> 00:10:29,820
template test and this is what a
template test looks like

179
00:10:29,820 --> 00:10:33,330
if Pike on is active feature hi Pike on
else

180
00:10:33,330 --> 00:10:36,400
hello sending hi active feature

181
00:10:36,400 --> 00:10:39,990
is the name on the template s and it
it's like a function

182
00:10:39,990 --> 00:10:43,900
it will get hike on as an argument and
it's a poster turn true

183
00:10:43,900 --> 00:10:47,130
the features on or false future law

184
00:10:47,130 --> 00:10:51,860
basically identical to the is active
thing we just it

185
00:10:51,860 --> 00:10:55,700
over to put on our our project manager
had for a second writes back

186
00:10:55,700 --> 00:10:59,190
there's only really three things are
gonna do one for us for the future

187
00:10:59,190 --> 00:11:00,940
flights in the config

188
00:11:00,940 --> 00:11:04,350
restore be Jim the rest have agenda
template s called

189
00:11:04,350 --> 00:11:09,000
actor feature and a lot of ocean called
is active so I switched left to

190
00:11:09,000 --> 00:11:12,240
the order left you for a reason to think
ok

191
00:11:12,240 --> 00:11:16,470
look at going back in season actual code
here a fair warning there the giant wala

192
00:11:16,470 --> 00:11:17,300
ko coming up

193
00:11:17,300 --> 00:11:21,590
I no giant wall coating hard to read for
those are you back in the cheap seats

194
00:11:21,590 --> 00:11:22,440
but

195
00:11:22,440 --> 00:11:26,420
I will do my best to talk through it and
but if you have a laptop

196
00:11:26,420 --> 00:11:29,480
feel free to open it to be at least last
giant wall ok

197
00:11:29,480 --> 00:11:33,630
code which is the link to a gist about
everything I'm not talk about

198
00:11:33,630 --> 00:11:37,440
so and if you have that feel free to
open it and look at pics the cattle fed

199
00:11:37,440 --> 00:11:37,690
up

200
00:11:37,650 --> 00:11:42,160
10 up so badly left I all code

201
00:11:42,160 --> 00:11:47,220
after neighbors regret

202
00:11:47,220 --> 00:11:50,330
ok so I remember lee said that

203
00:11:50,330 --> 00:11:54,890
flat extensions are involves a changing
that app object

204
00:11:54,890 --> 00:11:58,950
so we need a callable extensions are
just call ables

205
00:11:58,950 --> 00:12:03,680
they can be functions they can be object
in practice there almost always object

206
00:12:03,680 --> 00:12:07,550
because they're all always like to be
also ours is going to be an object to

207
00:12:07,550 --> 00:12:08,530
this is class

208
00:12:08,530 --> 00:12:11,930
feature flag and hear from object

209
00:12:11,930 --> 00:12:15,800
so like all objects and had a double
underscored method and a Wii

210
00:12:15,800 --> 00:12:20,130
allow the user to pass that magic up ap
object to a

211
00:12:20,130 --> 00:12:23,130
but if you notice we're actually making
optional

212
00:12:23,130 --> 00:12:27,010
and the and do something kinda weird
we're going to

213
00:12:27,010 --> 00:12:30,790
if we get ap pass to us we're really
gonna pass the buck

214
00:12:30,790 --> 00:12:33,850
over to another method called it ap
which is

215
00:12:33,850 --> 00:12:37,990
not optional ap okay so what why are we
doing this

216
00:12:37,990 --> 00:12:41,560
this is to support something called
application factories

217
00:12:41,560 --> 00:12:45,640
which is a really really common laugh
idiom I will use it what did you do

218
00:12:45,640 --> 00:12:46,040
number

219
00:12:46,040 --> 00:12:50,180
things us with the function or something
that generate that ap object for you

220
00:12:50,180 --> 00:12:54,640
up the reason why I'm splitting these
two things is I want my expansion to be

221
00:12:54,640 --> 00:12:56,050
able to be instantiated

222
00:12:56,050 --> 00:12:59,550
one without having that ap active yet

223
00:12:59,550 --> 00:13:03,190
a application factors are used for
things like testing so we may have many

224
00:13:03,190 --> 00:13:04,750
APs being generated

225
00:13:04,750 --> 00:13:07,300
and I want to be able to feed them to
that extent without having to create

226
00:13:07,300 --> 00:13:07,930
destroy

227
00:13:07,930 --> 00:13:11,430
every single time so armen actually the
crater floor

228
00:13:11,430 --> 00:13:15,470
actually suggests this is how you
structure your that's not why one show

229
00:13:15,470 --> 00:13:16,160
it to you

230
00:13:16,160 --> 00:13:19,320
so inlet is all in your pension level
and sensation

231
00:13:19,320 --> 00:13:22,850
and in it ap is all the changes you're
making to the ap

232
00:13:22,850 --> 00:13:26,550
utmost extensions of see out in the wild
are structured like this

233
00:13:26,550 --> 00:13:31,060
but that's why one show it to you okay
it's look actually writes all real code

234
00:13:31,060 --> 00:13:32,530
and not wanna play

235
00:13:32,530 --> 00:13:36,510
%uh the first thing you want to do what
store are features in the conflict

236
00:13:36,510 --> 00:13:41,890
so I said the Configure mostly a
dictionary and hear the case worth not

237
00:13:41,890 --> 00:13:45,750
so that's that app.config set default
because we're all professional

238
00:13:45,750 --> 00:13:47,040
developers in with that thing

239
00:13:47,040 --> 00:13:52,110
default or out so are default for our
feature clyde is going to be just an

240
00:13:52,110 --> 00:13:53,110
empty dictionary

241
00:13:53,110 --> 00:13:57,310
so that's already or so if you remember
a couple flight back

242
00:13:57,310 --> 00:14:00,470
I sorta barely did ap configure feature
flags

243
00:14:00,470 --> 00:14:04,770
iconic was true and i cant usually do
that in Python

244
00:14:04,770 --> 00:14:08,710
I to let you make a key in a subkey
without throwing a key air

245
00:14:08,710 --> 00:14:12,710
think and so that's why I could do that
is because I set a default

246
00:14:12,710 --> 00:14:17,140
here effort to make our lives easier
we're gonna write a method

247
00:14:17,140 --> 00:14:21,940
called Inc in Fig which takes one
argument which is the feature name:

248
00:14:21,940 --> 00:14:26,700
okay so if you you noticed I'm not
actually story in the app

249
00:14:26,700 --> 00:14:31,180
anywhere in extension there is no
self-taught Apple ap

250
00:14:31,180 --> 00:14:35,160
and that is on purpose I want the fifth
engine to not

251
00:14:35,160 --> 00:14:39,330
know how that fade within I want the app
to contain all the state all the things

252
00:14:39,330 --> 00:14:41,030
like this so

253
00:14:41,030 --> 00:14:44,030
up after the application factor that
other things like that

254
00:14:44,030 --> 00:14:49,750
so yeah so I am but to in order to get I
need to get the app break they need

255
00:14:49,750 --> 00:14:54,180
to getting that can fit a and so

256
00:14:54,180 --> 00:14:57,330
I'm gonna use an ATM a flash flood saves
me here

257
00:14:57,330 --> 00:15:01,070
by having something called current ap

258
00:15:01,070 --> 00:15:05,060
up her after the global when an
applicant cation kinda livor

259
00:15:05,060 --> 00:15:08,170
if the request is live of the last steps

260
00:15:08,170 --> 00:15:13,130
her apt to be whatever magic ap object
is currently running and currently

261
00:15:13,130 --> 00:15:14,960
controlling that request so

262
00:15:14,960 --> 00:15:18,530
that's how I can get to it here so here
I miss a Apple

263
00:15:18,530 --> 00:15:21,820
with her abductor Fig features like to
look for my

264
00:15:21,820 --> 00:15:25,540
in Fig the theater features there that
is overturn a billion

265
00:15:25,540 --> 00:15:30,000
and if it's not waterfalls

266
00:15:30,000 --> 00:15:35,400
okay what dot in a temple test

267
00:15:35,400 --> 00:15:38,610
just to remind you what that looks like
like this if hike on

268
00:15:38,610 --> 00:15:43,280
is active feature hi Pike on else hello
sandy with high

269
00:15:43,280 --> 00:15:46,320
so it turns out we can add a template s2
ginger in

270
00:15:46,320 --> 00:15:50,170
aren't just last in one line of code
there's a whole

271
00:15:50,170 --> 00:15:53,500
API for flask in this is one at the
hopes that it has

272
00:15:53,500 --> 00:15:57,750
it looks like this appetite ad template
test

273
00:15:57,750 --> 00:16:02,050
has two arguments one is a function
reference we wanted to call so we'll

274
00:16:02,050 --> 00:16:07,810
callin configure I the release tension
at a much later will have to invest but

275
00:16:07,810 --> 00:16:12,920
whatever it's fine for now Inc big and
be named the second one is the name what

276
00:16:12,920 --> 00:16:14,380
we want to use an agenda where

277
00:16:14,380 --> 00:16:17,710
so active feature %uh okay

278
00:16:17,710 --> 00:16:24,710
so I did this I committed it and all I
love my Travis CI build went red

279
00:16:24,840 --> 00:16:27,980
and I was like huh weird

280
00:16:27,980 --> 00:16:31,330
so I look at the API lol up

281
00:16:31,330 --> 00:16:36,660
a right weird I can't wait to meet your
problem here

282
00:16:36,660 --> 00:16:41,670
yeah a noon burdened and I was running
version 8

283
00:16:41,670 --> 00:16:45,080
this is something I want to talk about
eg application developers you deal with

284
00:16:45,080 --> 00:16:45,600
one

285
00:16:45,600 --> 00:16:51,720
version a flask Extension developers you
deal with as many as you care to support

286
00:16:51,720 --> 00:16:56,020
and so you'll be doing this a lot a
plaque was under rapid development and

287
00:16:56,020 --> 00:16:56,660
has

288
00:16:56,660 --> 00:17:01,340
and dot can specifically rewrote love
you got adding a lot of nice things to

289
00:17:01,340 --> 00:17:03,550
do this kind of stuff so it it's great

290
00:17:03,550 --> 00:17:07,240
what you have to be really careful so
what I end up having to do is actually

291
00:17:07,240 --> 00:17:08,750
do with has adderall

292
00:17:08,750 --> 00:17:11,809
up and check for that API call

293
00:17:11,809 --> 00:17:15,160
and cuz that's the standard going
forward I want to use that going forward

294
00:17:15,160 --> 00:17:19,390
but if it's not there then I need to
fall back to editing

295
00:17:19,390 --> 00:17:24,780
basically dictionaries directly I will
say that trap CIA is amazing for stuff

296
00:17:24,780 --> 00:17:25,709
like this

297
00:17:25,709 --> 00:17:29,470
and if you're curious you can look at
the gate hub offer Mike privacy i cant

298
00:17:29,470 --> 00:17:29,980
bigan

299
00:17:29,980 --> 00:17:33,590
and see how I did it I can test every
version up I thought I support

300
00:17:33,590 --> 00:17:38,230
every version of last I support and it
all works great

301
00:17:38,230 --> 00:17:44,410
ok able to done the last one is the is
active module level function

302
00:17:44,410 --> 00:17:47,530
so just remind you what that looks like
if feature

303
00:17:47,530 --> 00:17:50,620
is active hi Kat okay so

304
00:17:50,620 --> 00:17:54,530
this is gonna be a little confusing II
hope it was clear

305
00:17:54,530 --> 00:17:58,200
what I'm doing is not as important as
how I'm doing it P

306
00:17:58,200 --> 00:18:01,220
be a little example many you with a
little bit contrived but

307
00:18:01,220 --> 00:18:04,330
I wanted to show you part of this whole
thing so

308
00:18:04,330 --> 00:18:08,350
I see things like ok this is the module
level function

309
00:18:08,350 --> 00:18:12,150
it is not extension object we created
earlier

310
00:18:12,150 --> 00:18:16,410
if you notice online five-week throw it
away basically

311
00:18:16,410 --> 00:18:21,110
it doesn't have the model function is
active hadn't no idea where that is

312
00:18:21,110 --> 00:18:24,540
how to get to it but I need it to be
able to call it

313
00:18:24,540 --> 00:18:29,680
in config method so you might look this
lingo

314
00:18:29,680 --> 00:18:32,870
wanna wanna see in like pass it to the

315
00:18:32,870 --> 00:18:35,990
the inactive function or something at
just rose

316
00:18:35,990 --> 00:18:39,600
I mean it it work here but like if I had
multiple files

317
00:18:39,600 --> 00:18:43,430
I have a sec importing things like its
circular important gross

318
00:18:43,430 --> 00:18:47,830
up so but why do have I can get to the
current

319
00:18:47,830 --> 00:18:52,220
up we RTC something in there already

320
00:18:52,220 --> 00:18:56,020
so the short version as we can save
ourselves in the current

321
00:18:56,020 --> 00:18:59,310
in the app so all that wasn't clear at
all

322
00:18:59,310 --> 00:19:02,720
this is the takeaway part so this is
what I want to show you

323
00:19:02,720 --> 00:19:06,590
flask at the special registry for
expects tension it call

324
00:19:06,590 --> 00:19:09,930
app that expansion be key is the name
here

325
00:19:09,930 --> 00:19:13,110
attention and you can store anything you
like it here

326
00:19:13,110 --> 00:19:18,690
in this case I miss the store myself I'm
so go along with the ride for the app

327
00:19:18,690 --> 00:19:22,420
you might say well women I thought we
didn't wanna hope those two up together

328
00:19:22,420 --> 00:19:23,780
right

329
00:19:23,780 --> 00:19:27,300
I don't let's say the ap with be
extension because I want the extension

330
00:19:27,300 --> 00:19:29,140
to be able to run any app again

331
00:19:29,140 --> 00:19:32,330
yet you know makefield you can she wants
and run it

332
00:19:32,330 --> 00:19:36,310
but the app is the heart we are ready
modify or are you doing things to it so

333
00:19:36,310 --> 00:19:37,510
it's okayed for

334
00:19:37,510 --> 00:19:42,450
for the extension arrival all the app
but that's what we're gonna do

335
00:19:42,450 --> 00:19:45,980
and that means writing that modulo
function is super easy

336
00:19:45,980 --> 00:19:50,300
actually while I would have split here
and to just for readability

337
00:19:50,300 --> 00:19:53,670
a the sources feature clutter

338
00:19:53,670 --> 00:19:57,750
I look in the current app that's why the
the global I can get to it

339
00:19:57,750 --> 00:20:01,240
i lookin its extension registry for our
stuff

340
00:20:01,240 --> 00:20:04,980
and that's myself was just sitting there
like all the income big

341
00:20:04,980 --> 00:20:08,380
like anything else so all we do

342
00:20:08,380 --> 00:20:11,480
all right we're done we have for
thinking they can big

343
00:20:11,480 --> 00:20:16,390
we have a template test and we have that
is active culture

344
00:20:16,390 --> 00:20:19,560
I some right what did we learn we
learned

345
00:20:19,560 --> 00:20:22,760
use in it app because application
factors

346
00:20:22,760 --> 00:20:26,370
we learn how to set config the fall we
learned about calling

347
00:20:26,370 --> 00:20:29,500
flask books with that ad template test

348
00:20:29,500 --> 00:20:33,010
and we also learned that dot 10 in the
trap and we have to be careful about

349
00:20:33,010 --> 00:20:33,930
what

350
00:20:33,930 --> 00:20:37,910
you know what things are available and
we also learn how to use the stench

351
00:20:37,910 --> 00:20:38,590
registry

352
00:20:38,590 --> 00:20:41,880
to get to work session later okay

353
00:20:41,880 --> 00:20:47,330
so I hope you're all saying how old to
develop its so easy so straightforward

354
00:20:47,330 --> 00:20:51,300
great I why I never done this before and
then

355
00:20:51,300 --> 00:20:54,600
wait a minute my use cases way less
trivial

356
00:20:54,600 --> 00:20:59,560
I have the database I have other stuff I
need to do

357
00:20:59,560 --> 00:21:03,650
cell so there's not a lot documentation
on this out there

358
00:21:03,650 --> 00:21:07,660
I wanna show you sorta sampler
extensions that I think are good

359
00:21:07,660 --> 00:21:10,900
and that are going to want to learn from
and came from

360
00:21:10,900 --> 00:21:14,400
the first one i wanna talk about
developed of debug toolbar

361
00:21:14,400 --> 00:21:18,390
it's a great example a highly complex
extension I was really written by

362
00:21:18,390 --> 00:21:20,830
Michael been telling Jim I hope I have
his name right

363
00:21:20,830 --> 00:21:25,040
and it's currently maintain my map good
who I work with at LinkedIn

364
00:21:25,040 --> 00:21:28,250
it is a port love the Django debug
toolbar so

365
00:21:28,250 --> 00:21:32,570
in your flask ap what you'll get at the
sidebar with a whole bunch of candles to

366
00:21:32,570 --> 00:21:33,450
it

367
00:21:33,450 --> 00:21:36,640
it shows you HT to be a her that her
active

368
00:21:36,640 --> 00:21:40,560
I what temple surrendered variables are
powerful templates

369
00:21:40,560 --> 00:21:46,030
and I'll show you Squaw Peak Way reason
is from logging and things like that

370
00:21:46,030 --> 00:21:49,080
%uh it's a little hard to read but and
I'm this is that

371
00:21:49,080 --> 00:21:52,210
screenshot of %uh get help basically so

372
00:21:52,210 --> 00:21:56,020
I'll any I've given you know other
context

373
00:21:56,020 --> 00:21:59,260
but I think this is actually pretty
readable I think if you look at the

374
00:21:59,260 --> 00:22:00,280
flight later but

375
00:22:00,280 --> 00:22:04,010
it to the top line says in it apt with
using that same split as we are the

376
00:22:04,010 --> 00:22:06,100
sauce with in it ap

377
00:22:06,100 --> 00:22:09,200
and in the first two lines are iterating
for some things in it

378
00:22:09,200 --> 00:22:13,480
setting app.config set default with just
setting the app default

379
00:22:13,480 --> 00:22:17,700
a check a couple configs for paranoid
purposes and then the middle says

380
00:22:17,700 --> 00:22:22,110
debug toolbar load panels ap actually
happen the app to stop extension so

381
00:22:22,110 --> 00:22:27,590
it can do or configuration and the rest
is just calling template just calling a

382
00:22:27,590 --> 00:22:28,880
hoax

383
00:22:28,880 --> 00:22:33,180
app before request call me whenever
starts at after quest

384
00:22:33,180 --> 00:22:36,520
call this method will nap ends when
there were questions

385
00:22:36,520 --> 00:22:39,540
%uh cared a request for the lot the the
one over there ap

386
00:22:39,540 --> 00:22:42,790
this Patrick with actually monkey
patching the dispatcher request

387
00:22:42,790 --> 00:22:46,630
to be able to Tim to view that it is
handle that you and do other things like

388
00:22:46,630 --> 00:22:49,010
that lucky monkey patching itself that

389
00:22:49,010 --> 00:22:52,980
and the last two lines are just adding a
you all routes

390
00:22:52,980 --> 00:22:57,610
and blueprint so we can do CSS and
JavaScript and things like that

391
00:22:57,610 --> 00:23:02,430
so other great extensions up blast

392
00:23:02,430 --> 00:23:06,640
ceaser a is a CSRF protection library

393
00:23:06,640 --> 00:23:10,930
and so it's a great one to look at if
you're doing request processing

394
00:23:10,930 --> 00:23:14,380
are handling cookies that does things
like that I love it does a lot of her

395
00:23:14,380 --> 00:23:15,930
stuff

396
00:23:15,930 --> 00:23:19,240
left admin of love admin is kinda
Belcourt

397
00:23:19,240 --> 00:23:22,480
the flaps gathered django admin
interface

398
00:23:22,480 --> 00:23:27,170
immigrate to seek a welcoming has
blueprint a static file for the lot of

399
00:23:27,170 --> 00:23:27,860
things like that

400
00:23:27,860 --> 00:23:31,170
another one could want to look at it had
no I think a slightly different

401
00:23:31,170 --> 00:23:35,130
approach so using sick walkman of debug
toolbar so you can kind of compare and

402
00:23:35,130 --> 00:23:36,950
contrast between the two

403
00:23:36,950 --> 00:23:41,260
and then finally after class classy with
I love I love this extension

404
00:23:41,260 --> 00:23:45,830
add class-based you so I you can have an
object with a

405
00:23:45,830 --> 00:23:49,020
get posts put delete methods

406
00:23:49,020 --> 00:23:53,620
that will map those HTTP methods
directly to those things you can create

407
00:23:53,620 --> 00:23:55,760
an API really really easily

408
00:23:55,760 --> 00:23:58,900
and its pretty fantastic for that

409
00:23:58,900 --> 00:24:02,160
%uh okay with that I am I'm done so

410
00:24:02,160 --> 00:24:05,880
thank you so much for watching you need
who I'll reach me I am I am here to

411
00:24:05,880 --> 00:24:12,880
thank you so much

412
00:24:14,070 --> 00:24:17,789
idk of what alright I we have five
minutes for questions %uh

413
00:24:17,789 --> 00:24:22,669
anybody would like to pick my brain up
to the microphone and I will try to

414
00:24:22,669 --> 00:24:23,840
remember turkey your question

415
00:24:23,840 --> 00:24:28,340
what I've been told par-5

416
00:24:28,340 --> 00:24:35,340
and you also want to thank you

417
00:24:38,220 --> 00:24:40,470
can you give me a sense over within

418
00:24:40,470 --> 00:24:43,700
within LinkedIn how much do you use
extensions

419
00:24:43,700 --> 00:24:47,550
versus blueprints for your own code
rather things that are increased

420
00:24:47,550 --> 00:24:48,080
externally

421
00:24:48,080 --> 00:24:51,100
it really depends a so my

422
00:24:51,100 --> 00:24:56,490
I'll my team is very workflow have a so
we have a very very big and very work

423
00:24:56,490 --> 00:24:56,960
winner

424
00:24:56,960 --> 00:25:00,120
I V kinda things we used blueprint
extensively

425
00:25:00,120 --> 00:25:03,210
and we use we build our own mentioned
extensively I'm

426
00:25:03,210 --> 00:25:06,870
have a couple that we've dined in terms
and

427
00:25:06,870 --> 00:25:11,160
the other thing so flask is Python a
general use for tooling and trolled

428
00:25:11,160 --> 00:25:14,280
I'm in architecture and other stuff like
that as well collapse so

429
00:25:14,280 --> 00:25:19,080
mostly blueprint the proper use more we
do have a few extensions like that

430
00:25:19,080 --> 00:25:22,750
I pried open source on the ones we have
so it's her depend on you skate you have

431
00:25:22,750 --> 00:25:23,510
such a wide

432
00:25:23,510 --> 00:25:27,340
Rangers thought that's why we use flask
weaknesses it so flexible

433
00:25:27,340 --> 00:25:34,340
that answer question okay I can't think
too much


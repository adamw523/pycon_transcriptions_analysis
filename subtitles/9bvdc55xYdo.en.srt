1
00:00:00,000 --> 00:00:03,320
it who will be doing and intro to doctor

2
00:00:03,320 --> 00:00:07,259
talk on police give me a hand

3
00:00:07,259 --> 00:00:14,259
and let's get started

4
00:00:15,139 --> 00:00:15,759
thank you

5
00:00:15,759 --> 00:00:19,930
I am hello everyone welcome to the and
FactoryTalk

6
00:00:19,930 --> 00:00:23,279
on doctor as Carlos mention my name is
on jet

7
00:00:23,279 --> 00:00:26,439
I go by I'm just are on Twitter but on

8
00:00:26,439 --> 00:00:29,540
so I work for a company called New Relic
and p

9
00:00:29,540 --> 00:00:33,450
we use doctor in Maine town project I
mean explain a very specific example

10
00:00:33,450 --> 00:00:34,950
where we use it and how we

11
00:00:34,950 --> 00:00:38,129
sawdust particularly hairy problem but
more on that

12
00:00:38,129 --> 00:00:41,760
latter I I want to set the stage for

13
00:00:41,760 --> 00:00:45,940
why do we want to learn about doctor why
is it important why is it worth your

14
00:00:45,940 --> 00:00:46,480
time

15
00:00:46,480 --> 00:00:50,410
so but skip started explaining a typical
web stack it

16
00:00:50,410 --> 00:00:53,570
you know you have a Dr front-end server
Apache in Jackson

17
00:00:53,570 --> 00:00:57,700
backend server like unicorn you is key
are model is she I

18
00:00:57,700 --> 00:01:01,350
and then your engine go on top of that
its

19
00:01:01,350 --> 00:01:04,219
not it doesn't stop right there i mean
you have a database which could be

20
00:01:04,219 --> 00:01:07,090
possible as much equal and then you're
catching layer and your

21
00:01:07,090 --> 00:01:11,909
background task manager and you know if
you're in you're a customer than you

22
00:01:11,909 --> 00:01:15,450
have your elective monitor all these
different pieces an

23
00:01:15,450 --> 00:01:18,780
if you have if you happen to be a full
stack developer

24
00:01:18,780 --> 00:01:22,170
you could be modifying any of these
layers and

25
00:01:22,170 --> 00:01:26,299
come deployment I'm you check everything
you run your unit ass everything works

26
00:01:26,299 --> 00:01:29,469
great you run it on your local machine
to make sure that you know you haven't

27
00:01:29,469 --> 00:01:33,939
broken anything and everything looks
great looking confident and then you

28
00:01:33,939 --> 00:01:35,299
start rolling out a deployed

29
00:01:35,299 --> 00:01:38,659
half an hour later you find out that
none of your customers are able to pay

30
00:01:38,659 --> 00:01:42,529
so you her really roll everything back
and then you know try to start debugging

31
00:01:42,529 --> 00:01:46,799
and that can be anywhere from looking at
La Paz to trying to reproduce a

32
00:01:46,799 --> 00:01:48,639
production environment by Ian on

33
00:01:48,639 --> 00:01:52,479
exactly matching the minor version of
your engine access to Jane Doe and

34
00:01:52,479 --> 00:01:55,869
and trying to recreate the problem and

35
00:01:55,869 --> 00:01:58,609
you know but half a day later you find
out that there is an environment

36
00:01:58,609 --> 00:02:00,749
variable that you forgot to set in a
production environment

37
00:02:00,749 --> 00:02:05,270
on does that sound familiar to anyone at
all up good

38
00:02:05,270 --> 00:02:10,380
I'm not the only one and so doctor is
supposed to solve this problem in a very

39
00:02:10,380 --> 00:02:11,250
unique way

40
00:02:11,250 --> 00:02:14,920
and the way it handles this as your
double up man environment will be

41
00:02:14,920 --> 00:02:17,739
exactly the same as a production in my
mind the reason for that is because

42
00:02:17,739 --> 00:02:18,910
whatever you double up n

43
00:02:18,910 --> 00:02:21,630
will be the one that actually gets
deployed in production and I'm gonna

44
00:02:21,630 --> 00:02:22,430
show you how that

45
00:02:22,430 --> 00:02:26,620
how you could do that and in and we'll
look at

46
00:02:26,620 --> 00:02:30,550
a lot of different features a doctor up
before we actually get started

47
00:02:30,550 --> 00:02:33,870
I'm bar before we jump into that I want
to start by answering a very simple

48
00:02:33,870 --> 00:02:35,320
question what is doctor

49
00:02:35,320 --> 00:02:40,170
I since this is a technology conference
I presume no one's here thinking it's

50
00:02:40,170 --> 00:02:45,510
about Dockers the trousers company rain
by lot at this point to face as well

51
00:02:45,510 --> 00:02:48,780
Irish you put them one leg at a time

52
00:02:48,780 --> 00:02:52,070
and unless you're Superman please wear
the underwear inside

53
00:02:52,070 --> 00:02:56,330
on any yeah I understand skidding

54
00:02:56,330 --> 00:03:00,530
I doctor is an internal project that was
started by Doc cloud

55
00:03:00,530 --> 00:03:04,790
and in 2013 so it's ups at a fairly
young project but

56
00:03:04,790 --> 00:03:08,720
it has a very active community around
they died in fact the project was so

57
00:03:08,720 --> 00:03:11,750
wildly successful the company actually
perverted and change their name to

58
00:03:11,750 --> 00:03:12,490
doctor and

59
00:03:12,490 --> 00:03:16,020
and and it's a project that's written in
go arm

60
00:03:16,020 --> 00:03:20,380
and as a mention it it has a very active
community which is very welcoming and

61
00:03:20,380 --> 00:03:20,960
helpful

62
00:03:20,960 --> 00:03:26,130
I this is a definition taken straight
outta Dockers website that says doctors

63
00:03:26,130 --> 00:03:29,460
and open source engine the bottom its
deployment of any application

64
00:03:29,460 --> 00:03:32,760
as a lightweight portable self
sufficient container

65
00:03:32,760 --> 00:03:37,100
that will run virtually anywhere when
they say virtually anywhere they mean

66
00:03:37,100 --> 00:03:42,520
in Linux machines and and

67
00:03:42,520 --> 00:03:46,340
had to make it even come get a in modern
Linux machines with the recent kernel

68
00:03:46,340 --> 00:03:49,590
now but apart from that the definition
is actually

69
00:03:49,590 --> 00:03:52,290
pretty good actually it's a it's a
fairly accurate description of what

70
00:03:52,290 --> 00:03:53,050
doctor does

71
00:03:53,050 --> 00:03:56,440
on if your family or with see a true
Derby St jailed

72
00:03:56,440 --> 00:04:00,180
and or solarz owns the doctor is a
similar technology which provides an

73
00:04:00,180 --> 00:04:01,880
boxing for a process as you are

74
00:04:01,880 --> 00:04:05,580
it allows you to run your process in a
little sandbox on

75
00:04:05,580 --> 00:04:09,290
that doesn't you know interact with
outside of its container and

76
00:04:09,290 --> 00:04:12,790
and other things p so

77
00:04:12,790 --> 00:04:16,699
doctor for this particular sandboxing
and uses latex containers

78
00:04:16,699 --> 00:04:20,079
annex containers have been in the Linux
mainline kernel for about five years I

79
00:04:20,079 --> 00:04:20,579
think

80
00:04:20,579 --> 00:04:23,680
and so it's a very stable technology
that they're using

81
00:04:23,680 --> 00:04:27,419
and doctor is in is a interface on top
of that that makes easy for you to

82
00:04:27,419 --> 00:04:28,990
interact with the Xanax containers

83
00:04:28,990 --> 00:04:33,270
and in addition to just you know being a
and be sitting on top flex containers

84
00:04:33,270 --> 00:04:36,490
also provides some additional features
that makes it easy to use which is

85
00:04:36,490 --> 00:04:40,590
a union filesystem on which we'll see
what it means in a little bit

86
00:04:40,590 --> 00:04:43,599
on and you know nice version

87
00:04:43,599 --> 00:04:46,699
system kind of like get but not quite as
powerful I am

88
00:04:46,699 --> 00:04:51,229
and a REST API that allows you to
interact with the doctor

89
00:04:51,229 --> 00:04:54,840
I am to contrast this with a with a
virtual machine

90
00:04:54,840 --> 00:04:58,449
you have to bare metal on which a runner
host operating system and you know you

91
00:04:58,449 --> 00:05:00,120
run VMware or VirtualBox

92
00:05:00,120 --> 00:05:02,909
switches are high priced earlier and
then you install a full guest operating

93
00:05:02,909 --> 00:05:06,419
system inside of that which is you know
been to our centaurs anything

94
00:05:06,419 --> 00:05:10,009
and you know but multiple libraries in
in Django and

95
00:05:10,009 --> 00:05:13,050
and then you run your happens out of
that now if you want to create another

96
00:05:13,050 --> 00:05:16,020
one of these instances in a different
box then you have to go through the same

97
00:05:16,020 --> 00:05:16,479
process

98
00:05:16,479 --> 00:05:19,029
even in the same box you have to go
through the same process of actually

99
00:05:19,029 --> 00:05:20,689
installing the guest operating system
are

100
00:05:20,689 --> 00:05:23,889
you know launching a whole nother
snapshot of existing VM

101
00:05:23,889 --> 00:05:27,460
which can be quite expensive and kinda
resource-hungry

102
00:05:27,460 --> 00:05:31,229
comparing that to a doctor container he
had a bare-metal

103
00:05:31,229 --> 00:05:35,110
and you hope Coast Guard operating
system which is Linux in this case

104
00:05:35,110 --> 00:05:38,819
and if you install doctor then doctor
sets as a demon that runs on your

105
00:05:38,819 --> 00:05:39,569
machine

106
00:05:39,569 --> 00:05:42,990
and any time you launch a container gets
launched from

107
00:05:42,990 --> 00:05:46,680
image well we'll get into that
terminology definition of what I images

108
00:05:46,680 --> 00:05:48,309
and in just a minute but

109
00:05:48,309 --> 00:05:52,620
it launches the image and multiple
containers can share the same library

110
00:05:52,620 --> 00:05:56,059
because it it has a read-only lehrer as
soon as one is container start modifying

111
00:05:56,059 --> 00:05:56,719
that

112
00:05:56,719 --> 00:06:00,490
library then it creates cake a a
separate snapshot of that

113
00:06:00,490 --> 00:06:03,680
and only the dips other doctors are
stored so that's that

114
00:06:03,680 --> 00:06:06,849
advantage of having the Union file
system which allows you to

115
00:06:06,849 --> 00:06:11,379
do these copy on write I am tight type
operation

116
00:06:11,379 --> 00:06:15,819
so containers are very light weight
because they share the kernel with the

117
00:06:15,819 --> 00:06:17,400
underlying operating system

118
00:06:17,400 --> 00:06:20,580
it provides you the isolated instance
that you'll get from

119
00:06:20,580 --> 00:06:24,860
running actual virtual machine am
because from inside a container it looks

120
00:06:24,860 --> 00:06:26,129
as if you're inside a VM

121
00:06:26,129 --> 00:06:29,550
but outside of a container it looks as
if you're just another processor just

122
00:06:29,550 --> 00:06:33,009
you know its really that simple and a VM

123
00:06:33,009 --> 00:06:36,319
even the stripped-down bare minimum
Linux machine takes

124
00:06:36,319 --> 00:06:40,400
at least five seconds if you're a lucky
but container can start up in under a

125
00:06:40,400 --> 00:06:41,129
second

126
00:06:41,129 --> 00:06:44,610
on sometimes and just milliseconds

127
00:06:44,610 --> 00:06:48,150
so I so that's the advantage of of arm

128
00:06:48,150 --> 00:06:52,339
doctor now I'm not going to go into the
to the steps on how to get

129
00:06:52,339 --> 00:06:55,699
doctor installed on your machine and it
started because they do a very good job

130
00:06:55,699 --> 00:06:58,120
on that documentation and Dockers
website

131
00:06:58,120 --> 00:07:01,659
but i just want to briefly touch however
run doctor on OSX because they keep

132
00:07:01,659 --> 00:07:02,490
talking about it

133
00:07:02,490 --> 00:07:07,999
you do use Linux containers if you are
in the net on a Linux machine then

134
00:07:07,999 --> 00:07:11,110
you when you install doctor you get two
components the Dockers

135
00:07:11,110 --> 00:07:14,939
a demon component in a doctor's plan
component and it runs on your host

136
00:07:14,939 --> 00:07:15,800
operating system

137
00:07:15,800 --> 00:07:19,520
and your client talks to the doctor a
demon and you write you get to you know

138
00:07:19,520 --> 00:07:22,129
large containers and create images and
so on

139
00:07:22,129 --> 00:07:26,999
if you are on OSX like mine then there
is a product called due to doctor

140
00:07:26,999 --> 00:07:30,830
which is a very minimal Linux machine
like 25 megabytes

141
00:07:30,830 --> 00:07:36,779
I that allows you to run doctor just had
just the bare essentials to get back up

142
00:07:36,779 --> 00:07:37,740
and running

143
00:07:37,740 --> 00:07:40,759
and %uh there is always explain so what
I do is

144
00:07:40,759 --> 00:07:43,939
bouta doctor automatically launches a
tough one on VirtualBox in which it runs

145
00:07:43,939 --> 00:07:46,659
its Linux and then a doctor demon runs
in Sarawak so

146
00:07:46,659 --> 00:07:50,110
all the our stuff but I'm about to show
you will be happening in that particular

147
00:07:50,110 --> 00:07:52,210
setup

148
00:07:52,210 --> 00:07:56,149
I so I mentioned sewed and entries
couple after marge is here and then

149
00:07:56,149 --> 00:07:56,599
we'll

150
00:07:56,599 --> 00:08:00,699
will introduce from large ass we keep
going a doc sold I mentioned doctor has

151
00:08:00,699 --> 00:08:01,490
two components:

152
00:08:01,490 --> 00:08:05,009
the server component a client component
and

153
00:08:05,009 --> 00:08:09,669
did the server component to the demon
has to run on a Linux machine

154
00:08:09,669 --> 00:08:13,199
and it talks to plans into is one is
using a Unix socket

155
00:08:13,199 --> 00:08:16,909
if the client happens to be in the same
machine or at through a TCP socket if

156
00:08:16,909 --> 00:08:18,960
the client is on a different machine

157
00:08:18,960 --> 00:08:22,819
on from different machines you can talk
to it through the TCP socket there are

158
00:08:22,819 --> 00:08:26,330
plans available for Linux boxes or and
less action

159
00:08:26,330 --> 00:08:30,119
you can use them to to talk to Anna
demand that's running in a

160
00:08:30,119 --> 00:08:33,349
in a separate Linux machine let

161
00:08:33,349 --> 00:08:38,200
time for a quick demo

162
00:08:38,200 --> 00:08:41,570
let's look at what to what I have here
installed

163
00:08:41,570 --> 00:08:44,430
so I have a client version installed
Anna how the doctor sir version

164
00:08:44,430 --> 00:08:45,760
installed

165
00:08:45,760 --> 00:08:48,960
and I want to just get started by

166
00:08:48,960 --> 00:08:52,630
using a particular image and I can start
playing around with it now

167
00:08:52,630 --> 00:08:55,750
if I'm pulling so what I'm doing here is
a sampling an image

168
00:08:55,750 --> 00:08:59,120
from the registry an I am throwing out
some terminology such

169
00:08:59,120 --> 00:09:02,500
I'm going to get back muscle and explain
what those are

170
00:09:02,500 --> 00:09:05,720
and image is a read-only snapshot of

171
00:09:05,720 --> 00:09:09,610
your on it's a read-only snapshot and a
container

172
00:09:09,610 --> 00:09:13,370
is a instantiation of this image what
this means as

173
00:09:13,370 --> 00:09:18,110
say you you're reading a master's thesis
and you spent two years you put together

174
00:09:18,110 --> 00:09:21,830
an awesome pieces you sit there and you
type one letter at a time

175
00:09:21,830 --> 00:09:25,240
and create a master copy and you're
about to give it your professor

176
00:09:25,240 --> 00:09:28,560
you're not going to sit there and type
out the entire thesis again just to give

177
00:09:28,560 --> 00:09:31,300
it a professor just gonna make a
photocopy and send it to him

178
00:09:31,300 --> 00:09:34,680
and you can't make as many photocopies
as you want and a professor can happen

179
00:09:34,680 --> 00:09:38,770
and turn make modifications in on strike
out certain things in

180
00:09:38,770 --> 00:09:42,080
I do margin notes and highlights and
things like that but that's not going to

181
00:09:42,080 --> 00:09:43,160
factor master copy

182
00:09:43,160 --> 00:09:46,200
and it's not going to affect other
professors copies either

183
00:09:46,200 --> 00:09:49,330
it's completely localized to that
professors copy

184
00:09:49,330 --> 00:09:53,190
I am so this is the idea behind images
and container so and image

185
00:09:53,190 --> 00:09:56,260
is something that you put together which
is kinda like the master copy reinstall

186
00:09:56,260 --> 00:09:58,140
it alive a reason you create your in my

187
00:09:58,140 --> 00:10:01,510
sector in my memory Abel's either
project files and do

188
00:10:01,510 --> 00:10:04,700
all other stuff and when you're ready to
run that image

189
00:10:04,700 --> 00:10:09,220
you instantiate a container sky like
instantiating and object from a class

190
00:10:09,220 --> 00:10:13,510
and i'd get started it starts running
your container might start adding lock

191
00:10:13,510 --> 00:10:14,770
files or something but that

192
00:10:14,770 --> 00:10:17,910
those like funds will be contained
inside the container it's not going to

193
00:10:17,910 --> 00:10:21,290
go back to the image in its on appleyard
other containers that are running

194
00:10:21,290 --> 00:10:25,020
so this is completely contained I am in
the container

195
00:10:25,020 --> 00:10:29,020
any they are been that or staff I

196
00:10:29,020 --> 00:10:33,900
so a registry is kind of like the Python
package index

197
00:10:33,900 --> 00:10:37,860
where you have a collection of Ubuntu
different projects that people have

198
00:10:37,860 --> 00:10:38,580
pushed

199
00:10:38,580 --> 00:10:42,380
and I'm going to pull a specific image
arabs registry and start playing around

200
00:10:42,380 --> 00:10:42,930
with it

201
00:10:42,930 --> 00:10:46,180
now repositories are just products in
this registry so

202
00:10:46,180 --> 00:10:49,650
if registries can I get have been a
repository is your project repo

203
00:10:49,650 --> 00:10:54,990
am and so it's just a collection of
images Europe our story

204
00:10:54,990 --> 00:10:58,600
gay sampling and image I called base

205
00:10:58,600 --> 00:11:02,570
you now if I do doctor images this

206
00:11:02,570 --> 00:11:06,050
lists all the images that I have been my
local repository

207
00:11:06,050 --> 00:11:09,270
even though I pulled a single image
there's four entries here at

208
00:11:09,270 --> 00:11:12,680
sorry about the the though the point
being too great but

209
00:11:12,680 --> 00:11:17,030
on it showing for images but if you
notice there are they all had the same

210
00:11:17,030 --> 00:11:20,820
image id: so they're all the sex act the
same images but just different actually

211
00:11:20,820 --> 00:11:21,530
happen to be

212
00:11:21,530 --> 00:11:25,350
named latest Ubuntu went to quantal in
will do with her

213
00:11:25,350 --> 00:11:28,750
quantal the typo a

214
00:11:28,750 --> 00:11:32,240
help so that's that's how you list all
the images in your

215
00:11:32,240 --> 00:11:36,550
and in your local registry dock appears
as a command that you use to look at the

216
00:11:36,550 --> 00:11:38,100
containers that are currently running

217
00:11:38,100 --> 00:11:41,280
and since we have been launched in
containers dock appears doesn't give us

218
00:11:41,280 --> 00:11:43,440
anything it's potentially right now

219
00:11:43,440 --> 00:11:46,610
so let's launch a container so what I
the way you do that

220
00:11:46,610 --> 00:11:50,280
is you said doctor run and then give it
image name

221
00:11:50,280 --> 00:11:53,040
and then given a program that you want
to run in the container that you're

222
00:11:53,040 --> 00:11:53,890
about to launch

223
00:11:53,890 --> 00:11:57,130
so in this case was echo hello even
though the below that printer in my

224
00:11:57,130 --> 00:11:57,650
terminal

225
00:11:57,650 --> 00:12:02,220
actually ran inside the container and
then it came back

226
00:12:02,220 --> 00:12:05,990
doctor p- is still gives me nothing the
reason is because as soon as the process

227
00:12:05,990 --> 00:12:06,730
is done

228
00:12:06,730 --> 00:12:11,450
the containers jobs over and so it
stopped and dock appears we only give me

229
00:12:11,450 --> 00:12:14,720
and containers are act actively
currently running

230
00:12:14,720 --> 00:12:18,820
so let's run something a little bit
longer so I am going to do

231
00:12:18,820 --> 00:12:23,280
a infinite loop sorry about that

232
00:12:23,280 --> 00:12:26,870
and okay

233
00:12:26,870 --> 00:12:33,870
but did not work well

234
00:12:41,089 --> 00:12:41,450
okay

235
00:12:41,450 --> 00:12:45,029
so Iran an infinite loop that was
pending hello multiple times

236
00:12:45,029 --> 00:12:48,350
and this tied up my terminal

237
00:12:48,350 --> 00:12:52,170
because I'm running it in the foreground
you can also run in the background which

238
00:12:52,170 --> 00:12:52,440
is

239
00:12:52,440 --> 00:12:55,570
the demon mode where you

240
00:12:55,570 --> 00:12:58,839
do the same exact command with the dash
d option

241
00:12:58,839 --> 00:13:02,560
what that means is it runs the command
in a in a container and put it in the

242
00:13:02,560 --> 00:13:03,220
background

243
00:13:03,220 --> 00:13:06,880
when you run this it just gives your
shot I D so let's see what doctor PS

244
00:13:06,880 --> 00:13:07,490
doses

245
00:13:07,490 --> 00:13:11,529
doctor PSA's that there is a container
that is currently running

246
00:13:11,529 --> 00:13:14,570
with the command that is why the true
and it's pretty long

247
00:13:14,570 --> 00:13:20,649
and that's the shower idea man a copy
that one and run doctor logs on it

248
00:13:20,649 --> 00:13:24,980
doctor logs lets me see what is the STD
out that is currently in the container

249
00:13:24,980 --> 00:13:28,450
so this is how you can inspector
currently running container to see what

250
00:13:28,450 --> 00:13:29,450
is actually doing

251
00:13:29,450 --> 00:13:32,620
okay that's a brief description of

252
00:13:32,620 --> 00:13:36,410
images and containers and how you can
run them there's another way that you

253
00:13:36,410 --> 00:13:38,700
can run which is the interactive mode so

254
00:13:38,700 --> 00:13:41,810
the only command here that only changer
as I do a dash

255
00:13:41,810 --> 00:13:45,490
I and the Dashti so I say is I'm running
10 tracked in morning batch D is

256
00:13:45,490 --> 00:13:49,140
I'm not at my current TTY to this
particular happen and I'm about to run

257
00:13:49,140 --> 00:13:54,269
in here when I run L as actually get
group permissions had a container so

258
00:13:54,269 --> 00:13:59,230
inside a container as I mention it looks
exactly like a new fresh BM

259
00:13:59,230 --> 00:14:02,760
so I have all the whole file system
available in and

260
00:14:02,760 --> 00:14:06,399
on a ring for mean but when I run PS

261
00:14:06,399 --> 00:14:09,260
there is nothing running inside that
because that and it will only thing

262
00:14:09,260 --> 00:14:11,970
that's running is bash with what I
started this particular container

263
00:14:11,970 --> 00:14:16,360
so that's the advantage of having a
container which can

264
00:14:16,360 --> 00:14:21,019
on which can have its minimal processes
running in fact okay

265
00:14:21,019 --> 00:14:24,769
I am let's mess around a little bit so

266
00:14:24,769 --> 00:14:28,500
I am so this particular container and
modifying a bunch of things inside

267
00:14:28,500 --> 00:14:31,649
by installing a couple of

268
00:14:31,649 --> 00:14:35,350
am programs an because you know who
doesn't like

269
00:14:35,350 --> 00:14:38,720
fortune-telling cow so let's try

270
00:14:38,720 --> 00:14:42,370
try that so I just installed fortune

271
00:14:42,370 --> 00:14:46,800
and cow say in my machine and Mike out
ultimately pork

272
00:14:46,800 --> 00:14:52,310
that's nice am okay

273
00:14:52,310 --> 00:14:56,860
so we saw that I modified certain things
and how to the container

274
00:14:56,860 --> 00:14:59,920
no copies container shots gonna come in
handy little bit later

275
00:14:59,920 --> 00:15:06,040
but again the dock appears doesn't show
me that the content is running because

276
00:15:06,040 --> 00:15:08,459
when I exit onto the container container
has stopped

277
00:15:08,459 --> 00:15:11,839
but it is not destroyed it's still just
summer sleeping

278
00:15:11,839 --> 00:15:16,260
I am I still have the infinite love
running I'm gonna stop that

279
00:15:16,260 --> 00:15:19,569
am so the way you do that is using
doctor stop

280
00:15:19,569 --> 00:15:25,020
and and back is gone so that's how you
stop a runny container for for

281
00:15:25,020 --> 00:15:29,490
for container goes arm yeah keeps get
running then you can just stop it like

282
00:15:29,490 --> 00:15:29,850
that

283
00:15:29,850 --> 00:15:33,920
okay let's get back to something

284
00:15:33,920 --> 00:15:37,940
else so as I mentioned the container
that I messed with

285
00:15:37,940 --> 00:15:41,810
does not translate back to the image the
original image because as a master copy

286
00:15:41,810 --> 00:15:42,670
to prove

287
00:15:42,670 --> 00:15:46,040
let's start another in track to command
and launch it from base

288
00:15:46,040 --> 00:15:49,500
now if I try a fortune the command is
not found

289
00:15:49,500 --> 00:15:53,230
so that was actually localized to only
that containers or whatever I modified

290
00:15:53,230 --> 00:15:57,339
and ap and install that was in not going
to know that I

291
00:15:57,339 --> 00:16:01,360
on I I stopped so

292
00:16:01,360 --> 00:16:05,550
as I mentioned that shoddy comes in
handy because after you've created a

293
00:16:05,550 --> 00:16:08,220
container and you've changed a bunch of
things inside a bit if you want to

294
00:16:08,220 --> 00:16:09,949
create an image out of it because you
know

295
00:16:09,949 --> 00:16:14,069
you brought it to just how you wanted
then all you have to do is take the shot

296
00:16:14,069 --> 00:16:14,660
I D

297
00:16:14,660 --> 00:16:19,470
use the comic command and given a new
name and now a fire and doctor images

298
00:16:19,470 --> 00:16:22,540
I see the fortunate cow p

299
00:16:22,540 --> 00:16:25,890
with the new image ID because files a
change in sight

300
00:16:25,890 --> 00:16:31,600
so now if I run fortunate Cal

301
00:16:31,600 --> 00:16:35,430
and check whether I have my fortune

302
00:16:35,430 --> 00:16:39,319
and I do feel like it's mocking me but

303
00:16:39,319 --> 00:16:42,380
but I hate

304
00:16:42,380 --> 00:16:46,279
I have fortune so that's how that's how
you can create

305
00:16:46,279 --> 00:16:49,470
a image out of an existing container I
am

306
00:16:49,470 --> 00:16:53,160
mentor news1 other command call tag

307
00:16:53,160 --> 00:16:56,699
what this does is it it creates

308
00:16:56,699 --> 00:17:01,089
a tag it gives a different name for an
existing image to prove that it is

309
00:17:01,089 --> 00:17:01,890
existing image

310
00:17:01,890 --> 00:17:05,270
you notice they have exact same image
id: I just give it a new name

311
00:17:05,270 --> 00:17:08,490
and called it and it slashed pace
towards the reason I put 100 there's big

312
00:17:08,490 --> 00:17:11,959
at there's a reason for that because
this is how

313
00:17:11,959 --> 00:17:16,179
you push to the registry if you want
your image to be available for

314
00:17:16,179 --> 00:17:20,970
everyone else to download and use

315
00:17:20,970 --> 00:17:27,970
then you can do that so this is your
registry

316
00:17:35,230 --> 00:17:38,509
is how the registry looking into a
container surgeons and others and

317
00:17:38,509 --> 00:17:42,700
other things I am but I think my push

318
00:17:42,700 --> 00:17:47,169
has probably done yeah it was probably
done and if I go in here

319
00:17:47,169 --> 00:17:50,240
and look at it there's the new 1i just
pushed

320
00:17:50,240 --> 00:17:53,759
so that's how you can share things with

321
00:17:53,759 --> 00:17:58,860
with people that too mom but want to
share images okay

322
00:17:58,860 --> 00:18:01,929
so let's get back to the presentation
and get going

323
00:18:01,929 --> 00:18:06,759
to introduce registries repositories
weeks I want to basic commands

324
00:18:06,759 --> 00:18:11,820
how to pole less images run years logs
he has no other stuff

325
00:18:11,820 --> 00:18:16,360
I but those are created by with by
Hannah you have to type in one at a time

326
00:18:16,360 --> 00:18:19,299
and if someone else wants to recreate as
I mean you have to either give them the

327
00:18:19,299 --> 00:18:21,950
image or tell them how you created the
image in the first place

328
00:18:21,950 --> 00:18:25,580
I whereas doctor file allows you to do
automate all the stuff

329
00:18:25,580 --> 00:18:29,679
here's an example for doctor far so the
says from the base image so you're using

330
00:18:29,679 --> 00:18:29,980
an

331
00:18:29,980 --> 00:18:34,249
base image as your starting point you
can use the in me to set an environment

332
00:18:34,249 --> 00:18:34,970
variable

333
00:18:34,970 --> 00:18:38,610
use add to the add local files from your
machine into the

334
00:18:38,610 --> 00:18:42,580
images and run a bunch commands while
you're creating this image as

335
00:18:42,580 --> 00:18:45,779
a step-by-step process so the apt-get
update an apt-get install

336
00:18:45,779 --> 00:18:49,389
will happen automatically and CMD
command is actually interesting so every

337
00:18:49,389 --> 00:18:50,990
time I do the doctor run

338
00:18:50,990 --> 00:18:54,399
you'll notice that I had a program at
the end if you don't if you ignore the

339
00:18:54,399 --> 00:18:56,399
program if you completely amid the
program's

340
00:18:56,399 --> 00:18:59,470
then and this is the default program
that will get launched

341
00:18:59,470 --> 00:19:02,999
I'm its nixon

342
00:19:02,999 --> 00:19:07,009
here's the doc file

343
00:19:07,009 --> 00:19:11,169
and the way you build that is say doctor
bill Dashti

344
00:19:11,169 --> 00:19:14,509
Dashti is basically saying I want to
give it a new name

345
00:19:14,509 --> 00:19:19,080
and doctor file is located in the
current folder I run that

346
00:19:19,080 --> 00:19:22,159
it it actually installed everything and

347
00:19:22,159 --> 00:19:29,019
now if I Brun there we go

348
00:19:29,019 --> 00:19:32,740
so without a command I am it
automatically launches the commander

349
00:19:32,740 --> 00:19:33,909
defined in my doctor for

350
00:19:33,909 --> 00:19:37,559
okay

351
00:19:37,559 --> 00:19:41,279
so so far we've just been looking at him
playing out playing with Linux stores

352
00:19:41,279 --> 00:19:42,220
and things like that but

353
00:19:42,220 --> 00:19:45,840
if you want to run a django application
you can you can create a doctor file

354
00:19:45,840 --> 00:19:49,259
that sets up jingle for your insider
that had your project files into all-out

355
00:19:49,259 --> 00:19:50,320
some sort of thing

356
00:19:50,320 --> 00:19:53,460
on and export support and and you know
it'll

357
00:19:53,460 --> 00:19:57,039
exposing a port basically means opening
a port in your container I

358
00:19:57,039 --> 00:20:00,869
do all that and let's say you larger
container dodd

359
00:20:00,869 --> 00:20:04,580
as I mentioned the containers completely
isolated if you open a port

360
00:20:04,580 --> 00:20:08,539
eight house in and start listening on
that using django then that 8,000 is

361
00:20:08,539 --> 00:20:10,070
actually not available

362
00:20:10,070 --> 00:20:13,269
to your host machine it's only available
for that in that container

363
00:20:13,269 --> 00:20:17,250
the way you can map your host machine
sport

364
00:20:17,250 --> 00:20:20,369
to your containers port as using the
dash b.com

365
00:20:20,369 --> 00:20:24,289
dash be option so you just a dash be
eight thousand colin White House and

366
00:20:24,289 --> 00:20:24,779
then

367
00:20:24,779 --> 00:20:27,879
adult automatically mapped the
containers 8,000 with the local machine

368
00:20:27,879 --> 00:20:28,690
de pasion

369
00:20:28,690 --> 00:20:33,129
that networking stuff there a couple of
other

370
00:20:33,129 --> 00:20:37,110
and quick feet as I wanna go over which
is Walliams allows you to

371
00:20:37,110 --> 00:20:40,789
mount a volume from their host machine
into your container there are

372
00:20:40,789 --> 00:20:43,820
multiple different options that you can
do it Williams like

373
00:20:43,820 --> 00:20:47,879
amount Williams between containers and
things like that but out for simplicity

374
00:20:47,879 --> 00:20:49,220
sake I was gonna keep it

375
00:20:49,220 --> 00:20:52,029
I'm simple where you can mount something
from the host machine into your

376
00:20:52,029 --> 00:20:52,549
container

377
00:20:52,549 --> 00:20:56,179
and anything you right into a container
will be available on the host machine

378
00:20:56,179 --> 00:20:59,490
any changes you make in host will be
available on a container and you it

379
00:20:59,490 --> 00:21:01,679
allows you to do read only mountain

380
00:21:01,679 --> 00:21:05,309
I read write and all that stuff links is
a simple

381
00:21:05,309 --> 00:21:09,059
service discovery so let's say you have
a compare that's running my sequel and a

382
00:21:09,059 --> 00:21:09,990
container that's running

383
00:21:09,990 --> 00:21:14,289
Django how's this Django going to know
what's the IP address and port number

384
00:21:14,289 --> 00:21:15,580
that's available

385
00:21:15,580 --> 00:21:19,789
for it to contact my sequel because
every time a new container gets created

386
00:21:19,789 --> 00:21:21,539
a new IP address get assigned to read

387
00:21:21,539 --> 00:21:24,859
I doctor automatically takes care of you
know which is now available IP address

388
00:21:24,859 --> 00:21:26,029
and it assigns it for you

389
00:21:26,029 --> 00:21:29,460
so the way you do that is use the
National Inc option

390
00:21:29,460 --> 00:21:32,879
and that tells you that my sequels on

391
00:21:32,879 --> 00:21:36,879
IP address and port number will be
injected into my doc I and my Django's

392
00:21:36,879 --> 00:21:41,159
container as in man in variables so you
just designer Jane obligation to look at

393
00:21:41,159 --> 00:21:43,919
these good credentials from an honorable
and you're good to go

394
00:21:43,919 --> 00:21:49,179
and that briefly mention rest a beer you
can use it to pool images

395
00:21:49,179 --> 00:21:53,159
good list containers I shipyard is
actually a project that

396
00:21:53,159 --> 00:21:57,070
agenda project allows you to do all that
things are shown in command line from

397
00:21:57,070 --> 00:22:00,320
your browser actually I'm exactly
prequel

398
00:22:00,320 --> 00:22:04,070
the way we use it at New Relic on if you
guys don't know what we do

399
00:22:04,070 --> 00:22:07,980
we you installer software read operation
performance monitor so you install are

400
00:22:07,980 --> 00:22:10,970
softer on your server we collect
performance metrics and we send them to

401
00:22:10,970 --> 00:22:11,830
our server

402
00:22:11,830 --> 00:22:15,799
now we do this for I am all these
different libraries

403
00:22:15,799 --> 00:22:19,109
I actually I think this is part of it
there's a lot more but

404
00:22:19,109 --> 00:22:22,490
I had slight Stanford on anyway

405
00:22:22,490 --> 00:22:26,299
trying to and do integration test would
mean like I need my sequenced in the

406
00:22:26,299 --> 00:22:27,429
post-crescent stanza

407
00:22:27,429 --> 00:22:31,070
a reticence densmore and memcached
different versions of Django

408
00:22:31,070 --> 00:22:34,460
different versions a flask in all these
different things this was getting quite

409
00:22:34,460 --> 00:22:37,820
hairy in our integration tests can only
run in Jenkins it cannot be runnin

410
00:22:37,820 --> 00:22:42,500
locally the way we saw that was we put
everything in sight of a container

411
00:22:42,500 --> 00:22:46,869
and on you can have different kinds of
versions for these different things my

412
00:22:46,869 --> 00:22:49,399
so-called emergence will have it on
containers

413
00:22:49,399 --> 00:22:54,139
I am and if I made some changes to the
Django instrumentation than I will start

414
00:22:54,139 --> 00:22:57,419
a container with Django happens at a fan

415
00:22:57,419 --> 00:23:01,279
which automatically has links so all
these different services will be

416
00:23:01,279 --> 00:23:01,929
injected in

417
00:23:01,929 --> 00:23:05,609
as a non rebelled and I just have to go
through integration

418
00:23:05,609 --> 00:23:08,869
pasts locally and if I made some changes
to

419
00:23:08,869 --> 00:23:12,919
cherry pie flask whatever it is all
these can be run locally and it is all

420
00:23:12,919 --> 00:23:13,519
available

421
00:23:13,519 --> 00:23:18,259
and ready to go I does actually made our
integration tests faster on Jenkins

422
00:23:18,259 --> 00:23:19,899
because now we can run in parallel

423
00:23:19,899 --> 00:23:24,240
since they're completely isolated from
each other on so we just rode some basic

424
00:23:24,240 --> 00:23:24,940
simple

425
00:23:24,940 --> 00:23:30,059
bash scripts to get get this thing
going. at actually works really well

426
00:23:30,059 --> 00:23:33,909
I am so coming back to the original
problem so

427
00:23:33,909 --> 00:23:37,909
power how would you solve your foot
October and things like

428
00:23:37,909 --> 00:23:41,519
breaking being breaking changes happen
all time

429
00:23:41,519 --> 00:23:44,899
the way you can solve this is put them
in containers

430
00:23:44,899 --> 00:23:48,190
you're my sequel can be in its own
container your application stack in its

431
00:23:48,190 --> 00:23:49,369
own different container

432
00:23:49,369 --> 00:23:52,470
and each of your services can be in
separate containers

433
00:23:52,470 --> 00:23:56,159
any time you make a change you're making
an your change in a specific container

434
00:23:56,159 --> 00:23:58,059
and since containers are dirt cheap

435
00:23:58,059 --> 00:24:01,009
you can actually run them on a dev
machine it's not like you are starting

436
00:24:01,009 --> 00:24:02,889
up a whole the am in like

437
00:24:02,889 --> 00:24:07,289
working inside of our a crippled I
machine or anything like that

438
00:24:07,289 --> 00:24:11,359
and up if you want you can mount your
local machines

439
00:24:11,359 --> 00:24:15,119
a a folder as your host I am as Williams

440
00:24:15,119 --> 00:24:18,759
and it'll be completely available for
you so you can

441
00:24:18,759 --> 00:24:22,240
do your government push to prod well
it's not quite as simple

442
00:24:22,240 --> 00:24:25,080
and you probably want to push it to
registry and then from there you can

443
00:24:25,080 --> 00:24:26,210
push to prod

444
00:24:26,210 --> 00:24:29,599
but you know the registry doesn't have
to be the Public Register everyone can

445
00:24:29,599 --> 00:24:31,990
see it i mean there are private
legislate commercial offerings are

446
00:24:31,990 --> 00:24:33,009
available or

447
00:24:33,009 --> 00:24:35,830
on you can actually host your own
private industry locally on your machine

448
00:24:35,830 --> 00:24:36,799
there's like

449
00:24:36,799 --> 00:24:40,809
Django Rob Dhaka registered to search
for and get open you can find that

450
00:24:40,809 --> 00:24:44,899
real easily I am there is a really good
community

451
00:24:44,899 --> 00:24:49,700
there's on IRC and 10 cochran actually
is doing a poster session

452
00:24:49,700 --> 00:24:52,919
very friendly guy known just ask
questions to him

453
00:24:52,919 --> 00:24:56,599
I am I think that pretty much concludes

454
00:24:56,599 --> 00:25:03,599
my talk on I think I'm ready for
questions now

455
00:25:08,590 --> 00:25:11,940
and can get if anyone has any questions
please go to the mic microphone over

456
00:25:11,940 --> 00:25:12,600
there

457
00:25:12,600 --> 00:25:16,750
so I'm kinda Shilpa I'll go and throw it
out there for your

458
00:25:16,750 --> 00:25:21,200
I debugging how do you go about doing
that with doctor I

459
00:25:21,200 --> 00:25:24,350
so so there are different level to be by
so

460
00:25:24,350 --> 00:25:28,240
the the logs that I showed are a pretty
good example of what I something is

461
00:25:28,240 --> 00:25:28,650
going

462
00:25:28,650 --> 00:25:33,830
wrong inside of it now typically now
what we do is we tried to run SSH

463
00:25:33,830 --> 00:25:37,630
demand also in that mean in a in a
container so if something is going on

464
00:25:37,630 --> 00:25:41,150
and we want to go uninspected began as a
such into the container and

465
00:25:41,150 --> 00:25:44,990
start to see what's what actually
changing the other thing that

466
00:25:44,990 --> 00:25:48,970
we do is drop down one level I wanna
wear down where there's

467
00:25:48,970 --> 00:25:52,760
alexi dash attached to mandatory level
so you can alexi data that if you don't

468
00:25:52,760 --> 00:25:54,670
have SSH running in the container

469
00:25:54,670 --> 00:25:57,940
because you want to keep your container
absolutely minimal I'm

470
00:25:57,940 --> 00:26:01,470
but you could still do alexi data
pageant it puts you into interactive

471
00:26:01,470 --> 00:26:02,090
mode

472
00:26:02,090 --> 00:26:05,490
in the container and you can stay I'm
start messing around with their lock

473
00:26:05,490 --> 00:26:07,020
files take a look at it and see you

474
00:26:07,020 --> 00:26:10,330
home what what's actually going on so
those are some tips i have

475
00:26:10,330 --> 00:26:13,450
if you need to have

476
00:26:13,450 --> 00:26:17,320
different configuration for your
production environment like say you want

477
00:26:17,320 --> 00:26:18,200
to turn off

478
00:26:18,200 --> 00:26:22,370
debugging and have different you know
maybe you have replicated servers in

479
00:26:22,370 --> 00:26:23,220
production

480
00:26:23,220 --> 00:26:27,330
if you're using the same image on
development and production how do you

481
00:26:27,330 --> 00:26:29,960
account for the differences between
those two environments

482
00:26:29,960 --> 00:26:33,090
so that's a very good question so I
forgot to mention that there is a

483
00:26:33,090 --> 00:26:34,350
staging environment

484
00:26:34,350 --> 00:26:37,380
that is involved and in our actual
production deployment so

485
00:26:37,380 --> 00:26:40,500
week not only as a friend ERATION
testing we actually use it in some parts

486
00:26:40,500 --> 00:26:41,290
of our production

487
00:26:41,290 --> 00:26:44,550
other doctor tells is not to use it to
100 hours you know

488
00:26:44,550 --> 00:26:48,110
reached I but you know we like living on
the edge

489
00:26:48,110 --> 00:26:51,430
anyway and the way we do that

490
00:26:51,430 --> 00:26:55,130
is your steady environment should be I
have very very closely replicated with

491
00:26:55,130 --> 00:26:57,040
your production my man and the way we do
this

492
00:26:57,040 --> 00:27:00,190
and is after we we create our images

493
00:27:00,190 --> 00:27:03,590
we push it to our Jenkins over an urgent
concern over actually changes all that

494
00:27:03,590 --> 00:27:06,890
my memory will according to how the
production environment a bitch set up

495
00:27:06,890 --> 00:27:10,600
and then add runs all its integration
tests on that exact image so whatever

496
00:27:10,600 --> 00:27:11,170
the image

497
00:27:11,170 --> 00:27:14,980
as will be the one that actually gets
deployed eventually so we run our

498
00:27:14,980 --> 00:27:15,760
forecasts

499
00:27:15,760 --> 00:27:19,000
I with how the the containers will be
and

500
00:27:19,000 --> 00:27:23,110
with a ship from so animal fat helped

501
00:27:23,110 --> 00:27:26,670
can

502
00:27:26,670 --> 00:27:30,310
doctor be used to run untrusted code any
safe manner

503
00:27:30,310 --> 00:27:33,830
as a sandbox I yeah I think that

504
00:27:33,830 --> 00:27:38,120
was the intention for doctor so the way
it I mean it is a complete sand a

505
00:27:38,120 --> 00:27:40,990
sandbox environment so you can run
something and

506
00:27:40,990 --> 00:27:44,340
and there are a couple of features that
are kind of back which is you can rest

507
00:27:44,340 --> 00:27:45,800
trip how much memory that the

508
00:27:45,800 --> 00:27:50,410
container can consume and I a ton of
Cebu can restricted that something

509
00:27:50,410 --> 00:27:54,010
you can look up on the documentation but
you can in fact be on

510
00:27:54,010 --> 00:27:57,430
run your fork bomb inside and see if
it'll are if it'll

511
00:27:57,430 --> 00:28:03,960
bring down host or not try high airway
rum

512
00:28:03,960 --> 00:28:07,900
burned a python shop and we're using
doctor in production

513
00:28:07,900 --> 00:28:11,090
I'm on the edges a yeah

514
00:28:11,090 --> 00:28:14,940
but now we're still trying to figure out
the best way to

515
00:28:14,940 --> 00:28:18,510
deploy a bike requirements files appear

516
00:28:18,510 --> 00:28:21,890
they go in the doc file relieve
menopause human

517
00:28:21,890 --> 00:28:26,030
relationship between you like irma
Curiel repository in

518
00:28:26,030 --> 00:28:30,330
and virtual environments we don't really
need retrovirus a more were darker but

519
00:28:30,330 --> 00:28:33,510
do you have any suggestions for best
practices on

520
00:28:33,510 --> 00:28:37,070
moving from traditional virtual
environment and Pepe requirements

521
00:28:37,070 --> 00:28:40,530
and checking out the latest for
development verses

522
00:28:40,530 --> 00:28:45,020
tonight and doctor and we still use
virtual environment actually

523
00:28:45,020 --> 00:28:48,710
because it's just easier to do well I
guess you don't need russian mom is an

524
00:28:48,710 --> 00:28:49,470
art to pip

525
00:28:49,470 --> 00:28:53,780
bash are requirements are txt but now we
just still have it in our

526
00:28:53,780 --> 00:28:58,850
on environment but the so we actually do
it at the image creation step we don't

527
00:28:58,850 --> 00:29:01,660
do it inside a book and i got to the
container has launched so that you know

528
00:29:01,660 --> 00:29:02,250
the

529
00:29:02,250 --> 00:29:05,920
deploy process is literally just take on
move the image into the production

530
00:29:05,920 --> 00:29:06,990
system and they're like

531
00:29:06,990 --> 00:29:10,840
you know launcher contain out of it so
that happens at the bold step

532
00:29:10,840 --> 00:29:15,320
and on sorry I we still how r

533
00:29:15,320 --> 00:29:19,450
how r on requirements as part of their
repository and then backed by the jury

534
00:29:19,450 --> 00:29:21,100
as a whole gets added into the

535
00:29:21,100 --> 00:29:24,300
image and then we run a bunch a
different cast

536
00:29:24,300 --> 00:29:28,000
are steps to set up the image and
finally create a container for

537
00:29:28,000 --> 00:29:31,620
I'm sorry we don't have time for one
more question

538
00:29:31,620 --> 00:29:36,760
and not really a question docker does
support CPU shares

539
00:29:36,760 --> 00:29:41,590
and highly recommend checking out take
it pittance all poor thing

540
00:29:41,590 --> 00:29:44,980
for really get to work with them
environment

541
00:29:44,980 --> 00:29:48,840
call thank you I would not have time
thank you very much

542
00:29:48,840 --> 00:29:50,090
RV camper ended and

